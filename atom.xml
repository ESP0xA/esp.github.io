<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dirac Sea</title>
  
  <subtitle>where the water tastes like wine</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.etoa.io/"/>
  <updated>2022-04-08T06:53:37.716Z</updated>
  <id>https://www.etoa.io/</id>
  
  <author>
    <name>etoa</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 177. 第N高的薪水</title>
    <link href="https://www.etoa.io/2022/04/08/LeetCode-177-%E7%AC%ACN%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4/"/>
    <id>https://www.etoa.io/2022/04/08/LeetCode-177-%E7%AC%ACN%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4/</id>
    <published>2022-04-08T03:34:55.000Z</published>
    <updated>2022-04-08T06:53:37.716Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>数据库TopK问题，各种情况和对应方法。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="https://leetcode-cn.com/problems/nth-highest-salary/" target="_blank" rel="noopener">LeetCode 177. 第N高的薪水</a></p><h3 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h3><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">MySQL</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT</span><br><span class="line">BEGIN</span><br><span class="line">  set N :&#x3D; N - 1;</span><br><span class="line">  RETURN (</span><br><span class="line">      # Write your MySQL query statement below.</span><br><span class="line">      select SALARY from Employee</span><br><span class="line">      group by SALARY</span><br><span class="line">      order by SALARY desc</span><br><span class="line">      limit 1 offset n</span><br><span class="line">  );</span><br><span class="line">END</span><br></pre></td></tr></table></figure></div></div></div><p>将所有数据按照salary分组，并按照salary由高到低排序。<br>再选取一条数据。<br>又因为我们需要从最高开始第 $N$ 高数据，根据 <code>offset</code> 使用规则，需要偏移 $N - 1$ 位。<br>因为 <code>offset</code> 后面不能跟表达式，只可以跟变量或数字，所以需要提前将 $N$ 设为 $N - 1$.</p><p>该方法效率中等。</p><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">MySQL</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT</span><br><span class="line">BEGIN</span><br><span class="line">  RETURN (</span><br><span class="line">      # Write your MySQL query statement below.</span><br><span class="line">      SELECT </span><br><span class="line">          DISTINCT e.salary</span><br><span class="line">      FROM </span><br><span class="line">          employee e</span><br><span class="line">      WHERE </span><br><span class="line">          (SELECT count(DISTINCT salary) FROM employee WHERE salary&gt;e.salary) &#x3D; N-1</span><br><span class="line">  );</span><br><span class="line">END</span><br></pre></td></tr></table></figure></div></div></div><p>这个方法目前无法理解，主要是子查询中的 where条件。</p><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://leetcode-cn.com/problems/nth-highest-salary/" target="_blank" rel="noopener">LeetCode 177. 第N高的薪水</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;数据库TopK问题，各种情况和对应方法。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://www.etoa.io/tags/LeetCode/"/>
    
      <category term="TopK" scheme="https://www.etoa.io/tags/TopK/"/>
    
      <category term="排序" scheme="https://www.etoa.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="数据库" scheme="https://www.etoa.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="窗口函数" scheme="https://www.etoa.io/tags/%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 176. 第二高的薪水</title>
    <link href="https://www.etoa.io/2022/04/08/LeetCode-176-%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4/"/>
    <id>https://www.etoa.io/2022/04/08/LeetCode-176-%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4/</id>
    <published>2022-04-08T03:27:08.000Z</published>
    <updated>2022-04-08T03:32:38.084Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>数据库TopK问题</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><a href="https://leetcode-cn.com/problems/second-highest-salary/" target="_blank" rel="noopener">LeetCode 176. 第二高的薪水</a></p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">MySQL</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">(</span><br><span class="line">select distinct</span><br><span class="line">salary from Employee</span><br><span class="line">order by salary desc</span><br><span class="line">limit 1 offset 1</span><br><span class="line">) as SecondHighestSalary;</span><br></pre></td></tr></table></figure></div></div></div><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p>对于子查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select distinct</span><br><span class="line">salary from Employee</span><br><span class="line">order by salary desc</span><br><span class="line">limit 1 offset 1</span><br></pre></td></tr></table></figure><p>将查询产生一个临时数据集，当数据库总行数 &lt;= 1时，由于偏移的作用，将产生一个空集。<br>使用第二次查询可以查到null值，满足题目要求。</p><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://leetcode-cn.com/problems/second-highest-salary/" target="_blank" rel="noopener">LeetCode 176. 第二高的薪水</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;数据库TopK问题&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://www.etoa.io/tags/LeetCode/"/>
    
      <category term="TopK" scheme="https://www.etoa.io/tags/TopK/"/>
    
      <category term="排序" scheme="https://www.etoa.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="数据库" scheme="https://www.etoa.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="子查询" scheme="https://www.etoa.io/tags/%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>解决BeanDefinitionStoreException: Failed to parse configuration class异常</title>
    <link href="https://www.etoa.io/2021/10/08/%E8%A7%A3%E5%86%B3BeanDefinitionStoreException-Failed-to-parse-configuration-class%E5%BC%82%E5%B8%B8/"/>
    <id>https://www.etoa.io/2021/10/08/%E8%A7%A3%E5%86%B3BeanDefinitionStoreException-Failed-to-parse-configuration-class%E5%BC%82%E5%B8%B8/</id>
    <published>2021-10-08T08:37:36.000Z</published>
    <updated>2021-10-08T08:45:13.607Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>解决一个由重复生成的bean导致的bean冲突异常。</p><a id="more"></a><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>在某次发版前夕，pull了最新代码之后，项目神奇般的无法启动了，疯狂报“BeanDefinitionStoreException: Failed to parse configuration class异常”，拉取最新代码或者拉取之前迭代的代码都卡在这里。<br>看了一下，在项目编译之后，会在target目录下生成两个相同类。</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>执行Mavean的 <code>mvn clean</code> 将临时文件清理即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;解决一个由重复生成的bean导致的bean冲突异常。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="工程" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="异常" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E5%B7%A5%E7%A8%8B/%E5%BC%82%E5%B8%B8/"/>
    
    
      <category term="工程" scheme="https://www.etoa.io/tags/%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="Maven" scheme="https://www.etoa.io/tags/Maven/"/>
    
      <category term="异常" scheme="https://www.etoa.io/tags/%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>HJ33. 整数与IP地址之间的转换</title>
    <link href="https://www.etoa.io/2021/08/31/HJ33-%E6%95%B4%E6%95%B0%E4%B8%8EIP%E5%9C%B0%E5%9D%80%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    <id>https://www.etoa.io/2021/08/31/HJ33-%E6%95%B4%E6%95%B0%E4%B8%8EIP%E5%9C%B0%E5%9D%80%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</id>
    <published>2021-08-31T06:09:13.000Z</published>
    <updated>2021-08-31T06:21:17.058Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>一道基于字符串的进制转换问题。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>原理：ip地址的每段可以看成是一个 $0$-$255$的整数，把每段拆分成一个二进制形式组合起来，然后把这个二进制数转变成一个长整数。<br>举例：一个ip地址为 $10.0.3.193$</p><table><thead><tr><th>每段数字</th><th>相对应的二进制数</th></tr></thead><tbody><tr><td>10</td><td>00001010</td></tr><tr><td>0</td><td>00000000</td></tr><tr><td>3</td><td>00000011</td></tr><tr><td>193</td><td>11000001</td></tr></tbody></table><p>组合起来即为：$00001010$ $00000000$ $00000011$ $11000001$,转换为 $10$ 进制数就是：$167773121$，即该ip地址转换后的数字就是它了。</p><p>本题含有多组输入用例，每组用例需要你将一个ip地址转换为整数、将一个整数转换为ip地址。</p><p><strong>输入描述：</strong></p><blockquote><p>输入<br>1 输入IP地址<br>2 输入10进制型的IP地址</p></blockquote><p><strong>输出描述：</strong></p><blockquote><p>输出<br>1 输出转换成10进制的IP地址<br>2 输出转换后的IP地址</p></blockquote><p><strong>示例1</strong></p><blockquote><p>输入：<br>10.0.3.193<br>167969729</p></blockquote><blockquote><p>输出：<br>167773121<br>10.3.3.193</p></blockquote><h3 id><a href="#" class="headerlink" title></a></h3><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-31 14:21:11</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ull unsigned long long</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ull <span class="title">s_to_ul_hi</span><span class="params">(<span class="built_in">string</span> &amp;s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bitset</span>&lt;<span class="number">32</span>&gt;(s).to_ullong();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ull <span class="title">s_to_ul_lo</span><span class="params">(<span class="built_in">string</span> &amp;s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bitset</span>&lt;<span class="number">8</span>&gt;(s).to_ullong();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="built_in">string</span> <span class="title">to_bin_string_hi</span><span class="params">(ull &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bitset</span>&lt;<span class="number">32</span>&gt;(x).to_string();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="built_in">string</span> <span class="title">to_bin_string_lo</span><span class="params">(ull &amp;x)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bitset</span>&lt;<span class="number">8</span>&gt;(x).to_string();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">num_to_ip</span><span class="params">(ull &amp;num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> bin_str = to_bin_string_hi(num);</span><br><span class="line">    <span class="built_in">string</span> each = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = bin_str.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">8</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            each += bin_str[i];</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; s_to_ul_lo(each);</span><br><span class="line">            <span class="keyword">if</span> (i != n - <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">'.'</span>;</span><br><span class="line">            each = <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            each += bin_str[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ip_to_num</span><span class="params">(<span class="built_in">string</span> &amp;ip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> bin_num = <span class="string">""</span>;</span><br><span class="line">    ull x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = ip.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> j = i;</span><br><span class="line">        <span class="keyword">for</span> (; j &lt; n &amp;&amp; ip[j] != <span class="string">'.'</span>; j++) &#123;</span><br><span class="line">            x = x * <span class="number">10</span> + (ip[j] - <span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        i = j;</span><br><span class="line">        bin_num += to_bin_string_lo(x);</span><br><span class="line">        x = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s_to_ul_hi(bin_num) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="built_in">string</span> &amp;ip, ull &amp;num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ip_to_num(ip);</span><br><span class="line">    num_to_ip(num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ip;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; ip;) &#123;</span><br><span class="line">        ull num;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">        solve(ip, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href></a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;一道基于字符串的进制转换问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="进制转换" scheme="https://www.etoa.io/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
      <category term="bitset" scheme="https://www.etoa.io/tags/bitset/"/>
    
  </entry>
  
  <entry>
    <title>Maven编译踩坑记录：Maven未识别JDK的问题</title>
    <link href="https://www.etoa.io/2021/08/24/Maven%E7%BC%96%E8%AF%91%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95%EF%BC%9AMaven%E6%9C%AA%E8%AF%86%E5%88%ABJDK%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://www.etoa.io/2021/08/24/Maven%E7%BC%96%E8%AF%91%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95%EF%BC%9AMaven%E6%9C%AA%E8%AF%86%E5%88%ABJDK%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-08-24T02:40:52.000Z</published>
    <updated>2021-10-08T08:39:01.223Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>记一次mvn编译时踩的坑。</p><a id="more"></a><h3 id="情况描述"><a href="#情况描述" class="headerlink" title="情况描述"></a>情况描述</h3><p>当我在使用 <code>mvn tomcat7:run</code> 编译的时候，出现提示：<br><code>No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK?</code></p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>问题在于没有配置JDK环境变量。</p><ol><li>查看JDK目录，执行：<code>$ /usr/libexec/java_home -V</code><br>得到：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Matching Java Virtual Machines (2):</span><br><span class="line">    1.8.301.09 (x86_64) <span class="string">"Oracle Corporation"</span> - <span class="string">"Java"</span> /Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home</span><br><span class="line">    1.8.0_301 (x86_64) <span class="string">"Oracle Corporation"</span> - <span class="string">"Java SE 8"</span> /Library/Java/JavaVirtualMachines/jdk1.8.0_301.jdk/Contents/Home</span><br><span class="line">/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home</span><br></pre></td></tr></table></figure>可知，我们的JDK目录位于：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.8.0_301 (x86_64) &quot;Oracle Corporation&quot; - &quot;Java SE 8&quot; &#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines&#x2F;jdk1.8.0_301.jdk&#x2F;Contents&#x2F;Home</span><br></pre></td></tr></table></figure></li><li>配置JDK环境变量，执行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ open -e .bash_profile</span><br></pre></td></tr></table></figure></li><li>在.bash_profile中添加：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines&#x2F;jdk1.8.0_301.jdk&#x2F;Contents&#x2F;Home</span><br></pre></td></tr></table></figure></li><li>执行：<code>$ source .bash_profile</code>使之生效.</li><li>执行：<code>echo $JAVA_HOME</code>查看是否生效。</li></ol><h3 id="问题回溯"><a href="#问题回溯" class="headerlink" title="问题回溯"></a>问题回溯</h3><p>其实问题的本质就是maven找不到JDK，配置一下JDK环境变量即可。</p><div class="note primary">            <p><strong>参考：</strong> <a href="https://juejin.cn/post/6844903878694010893" target="_blank" rel="noopener">Mac 配置JDK环境变量</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;记一次mvn编译时踩的坑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="工程" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="异常" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E5%B7%A5%E7%A8%8B/%E5%BC%82%E5%B8%B8/"/>
    
    
      <category term="工程" scheme="https://www.etoa.io/tags/%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="Maven" scheme="https://www.etoa.io/tags/Maven/"/>
    
      <category term="异常" scheme="https://www.etoa.io/tags/%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>HJ32. 密码截取</title>
    <link href="https://www.etoa.io/2021/08/23/HJ32-%E5%AF%86%E7%A0%81%E6%88%AA%E5%8F%96/"/>
    <id>https://www.etoa.io/2021/08/23/HJ32-%E5%AF%86%E7%A0%81%E6%88%AA%E5%8F%96/</id>
    <published>2021-08-23T14:54:01.000Z</published>
    <updated>2021-08-23T15:08:46.632Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>最长回文子串问题。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>Catcher是MCA国的情报员，他工作时发现敌国会用一些对称的密码进行通信，比如像这些 $ABBA$，$ABA$，$A$，$123321$，但是他们有时会在开始或结束时加入一些无关的字符以防止别国破解。比如进行下列变化 $ABBA$-&gt;$12ABBA$, $ABA$-&gt;$ABAKK$, $123321$-&gt;$51233214$　。因为截获的串太长了，而且存在多种可能的情况（ $abaaab$ 可看作是 $aba$,或 $baaab$ 的加密形式），Cathcer的工作量实在是太大了，他只能向电脑高手求助，你能帮Catcher找出最长的有效密码串吗？</p><p>本题含有多组样例输入。</p><p><strong>输入描述：</strong><br>输入一个字符串</p><p><strong>输出描述：</strong><br>返回有效密码串的最大长度</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>ABBA</p></blockquote><blockquote><p>输出：<br>4</p></blockquote><h3 id="最长回文子串"><a href="#最长回文子串" class="headerlink" title="最长回文子串"></a>最长回文子串</h3><p>枚举回文子串中心点，根据回文子串长度的奇偶性分别求出最长串。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">C++</a></li><li class="tab"><a href="#g_tab0-3">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-06-06</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>);</span><br><span class="line">    <span class="built_in">cout</span>.tie(<span class="literal">nullptr</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (; getline(<span class="built_in">cin</span>, s);)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">-1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// for each center</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// odd size</span></span><br><span class="line">            <span class="keyword">int</span> l = i - <span class="number">1</span>, r = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (; l &gt;= <span class="number">0</span> &amp;&amp; r &lt;= s.<span class="built_in">size</span>() &amp;&amp; s[l] == s[r]; l--, r++);</span><br><span class="line">            <span class="keyword">int</span> len = r - <span class="number">1</span> - (l + <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">            res = <span class="built_in">max</span>(res, len);</span><br><span class="line">            <span class="comment">// even size</span></span><br><span class="line">            l = i, r = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (; l &gt;= <span class="number">0</span> &amp;&amp; r &lt;= s.<span class="built_in">size</span>() &amp;&amp; s[l] == s[r]; l--, r++);</span><br><span class="line">            len = r - <span class="number">1</span> - (l + <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">            res = <span class="built_in">max</span>(res, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-23 22:58:01</span></span><br><span class="line"><span class="comment"> * 如果是求出最长回文子串是什么，可以参考如下代码</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="built_in">string</span> <span class="title">ranger</span><span class="params">(<span class="built_in">string</span> &amp;s, <span class="keyword">int</span> lc, <span class="keyword">int</span> rc)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s[lc] != s[rc]) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">int</span> l = lc - <span class="number">1</span>, r = rc + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; l &gt;= <span class="number">0</span> &amp;&amp; r &lt;= s.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; s[l] == s[r]; --l, ++r);</span><br><span class="line">    ++l, --r;</span><br><span class="line">    <span class="keyword">return</span> s.substr(l, r - l + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="built_in">string</span> <span class="title">ranger</span><span class="params">(<span class="built_in">string</span> &amp;s, <span class="keyword">int</span> center)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> res;</span><br><span class="line">    <span class="keyword">int</span> l = center - <span class="number">1</span>, r = center + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; l &gt;= <span class="number">0</span> &amp;&amp; r &lt;= s.<span class="built_in">size</span>() - <span class="number">1</span> &amp;&amp; s[l] == s[r]; --l, ++r);</span><br><span class="line">    ++l, --r;</span><br><span class="line">    <span class="keyword">return</span> s.substr(l, r - l + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; s;) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">-1</span>;</span><br><span class="line">        <span class="comment">// 最长回文子串长度为奇数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="built_in">string</span> t = ranger(s, i);</span><br><span class="line">            res = <span class="built_in">max</span>(res, (<span class="keyword">int</span>)t.<span class="built_in">size</span>());</span><br><span class="line">            <span class="comment">// cout &lt;&lt; t &lt;&lt; endl;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 最长回文子串长度为偶数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">string</span> t = ranger(s, i, i + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (t != <span class="string">""</span>) res = <span class="built_in">max</span>(res, (<span class="keyword">int</span>)t.<span class="built_in">size</span>());</span><br><span class="line">            <span class="comment">// cout &lt;&lt; t &lt;&lt; endl;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-3"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-23 23:07:47</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            String s = in.next();</span><br><span class="line">            <span class="keyword">int</span> res = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> l = i - <span class="number">1</span>, r = i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (; l &gt;= <span class="number">0</span> &amp;&amp; r &lt; n &amp;&amp; s.charAt(l) == s.charAt(r); --l, ++r);</span><br><span class="line">                ++l;</span><br><span class="line">                --r;</span><br><span class="line">                res = Math.max(res, r - l + <span class="number">1</span>);</span><br><span class="line">                l = i;</span><br><span class="line">                r = i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (; l &gt;= <span class="number">0</span> &amp;&amp; r &lt; n &amp;&amp; s.charAt(l) == s.charAt(r); --l, ++r);</span><br><span class="line">                ++l;</span><br><span class="line">                --r;</span><br><span class="line">                res = Math.max(res, r - l + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/3cd4621963e8454594f00199f4536bb1?tpId=37&&tqId=21255&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ32. 密码截取</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;最长回文子串问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ29. 字符串加解密</title>
    <link href="https://www.etoa.io/2021/08/23/HJ29-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8A%A0%E8%A7%A3%E5%AF%86/"/>
    <id>https://www.etoa.io/2021/08/23/HJ29-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8A%A0%E8%A7%A3%E5%AF%86/</id>
    <published>2021-08-23T05:08:51.000Z</published>
    <updated>2021-08-23T05:32:56.067Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单字符串处理，需要对ASCII码表很熟。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong></p><ol><li><p>对输入的字符串进行加解密，并输出。</p></li><li><p>加密方法为：</p></li></ol><p>当内容是英文字母时则用该英文字母的后一个字母替换，同时字母变换大小写,如字母 $a$ 时则替换为 $B$；字母 $Z$ 时则替换为 $a$；</p><p>当内容是数字时则把该数字加 $1$，如 $0$ 替换 $1$，$1$ 替换 $2$，$9$ 替换 $0$；</p><p>其他字符不做变化。</p><ol start="3"><li>解密方法为加密的逆过程。</li></ol><p>本题含有多组样例输入。</p><p><strong>输入描述：</strong></p><p>输入说明<br>输入一串要加密的密码<br>输入一串加过密的密码</p><p><strong>输出描述：</strong></p><p>输出说明<br>输出加密后的字符<br>输出解密后的字符</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>abcdefg<br>BCDEFGH</p></blockquote><blockquote><p>输出：<br>BCDEFGH<br>abcdefg</p></blockquote><h3 id="根据ASCII码表进行处理"><a href="#根据ASCII码表进行处理" class="headerlink" title="根据ASCII码表进行处理"></a>根据ASCII码表进行处理</h3><p>Java语言不方便直接写ASCII码。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-23 13:13:18</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decode</span><span class="params">(<span class="built_in">string</span> &amp;s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> res = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> c = s[i];</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">48</span>) &#123;</span><br><span class="line">                res += <span class="number">57</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res += c - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">65</span>) &#123;</span><br><span class="line">                res += <span class="number">97</span> + <span class="number">25</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">97</span>) &#123;</span><br><span class="line">                res += <span class="number">90</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res += <span class="built_in">islower</span>(c) ? c - <span class="number">32</span> - <span class="number">1</span> : c + <span class="number">32</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encode</span><span class="params">(<span class="built_in">string</span> &amp;s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> res = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> c = s[i];</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">57</span>) &#123;</span><br><span class="line">                res += <span class="number">48</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res += c + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="number">90</span>) &#123;</span><br><span class="line">                res += <span class="number">97</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">97</span> + <span class="number">25</span>) &#123;</span><br><span class="line">                res += <span class="number">65</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res += <span class="built_in">islower</span>(c) ? c - <span class="number">32</span> + <span class="number">1</span>: c + <span class="number">32</span> + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> stoencode;</span><br><span class="line">    <span class="built_in">string</span> stodecode;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; stoencode;) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; stodecode;</span><br><span class="line">        encode(stoencode);</span><br><span class="line">        decode(stodecode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-23 13:31:12</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">decode</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (Character.isDigit(c)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (c == <span class="string">'0'</span>) &#123;</span><br><span class="line">                    res.append(<span class="string">'9'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    res.append((<span class="keyword">char</span>)(c - <span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (c == <span class="string">'A'</span>) &#123;</span><br><span class="line">                    res.append(<span class="string">'z'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'a'</span>) &#123;</span><br><span class="line">                    res.append(<span class="string">'Z'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    res.append(Character.isLowerCase(c) ? (<span class="keyword">char</span>)(c - <span class="number">32</span> - <span class="number">1</span>) : (<span class="keyword">char</span>)(c + <span class="number">32</span> - <span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (Character.isDigit(c)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (c == <span class="string">'9'</span>) &#123;</span><br><span class="line">                    res.append(<span class="string">'0'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    res.append((<span class="keyword">char</span>)(c + <span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (c == <span class="string">'Z'</span>) &#123; </span><br><span class="line">                    res.append(<span class="string">'a'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'z'</span>) &#123;</span><br><span class="line">                    res.append(<span class="string">'A'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    res.append(Character.isLowerCase(c) ? (<span class="keyword">char</span>)(c - <span class="number">32</span> + <span class="number">1</span>) : (<span class="keyword">char</span>)(c + <span class="number">32</span> + <span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String stoEncode;</span><br><span class="line">        String stoDecode;</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            stoEncode = in.next();</span><br><span class="line">            stoDecode = in.next();</span><br><span class="line">            encode(stoEncode);</span><br><span class="line">            decode(stoDecode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h3 id="查表"><a href="#查表" class="headerlink" title="查表"></a>查表</h3><p>本题还可使用查表方法，事先构造加解密对应的表。在此不再赘述。</p><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/2aa32b378a024755a3f251e75cbf233a?tpId=37&&tqId=21252&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ29. 字符串加解密</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单字符串处理，需要对ASCII码表很熟。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ27. 查找兄弟单词</title>
    <link href="https://www.etoa.io/2021/08/22/HJ27-%E6%9F%A5%E6%89%BE%E5%85%84%E5%BC%9F%E5%8D%95%E8%AF%8D/"/>
    <id>https://www.etoa.io/2021/08/22/HJ27-%E6%9F%A5%E6%89%BE%E5%85%84%E5%BC%9F%E5%8D%95%E8%AF%8D/</id>
    <published>2021-08-22T02:18:36.000Z</published>
    <updated>2021-08-22T02:56:16.756Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>字符串TopK问题。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>定义一个单词的“兄弟单词”为：交换该单词字母顺序（注：可以交换任意次），而不添加、删除、修改原有的字母就能生成的单词。<br>兄弟单词要求和原来的单词不同。例如：$ab$ 和 $ba$ 是兄弟单词。$ab$ 和 $ab$ 则不是兄弟单词。<br>现在给定你 $n$ 个单词，另外再给你一个单词 $str$，让你寻找 $str$ 的兄弟单词里，按字典序排列后的第 $k$ 个单词是什么？<br>注意：字典中可能有重复单词。本题含有多组输入数据。</p><p><strong>输入描述：</strong><br>先输入单词的个数 $n$，再输入 $n$ 个单词。 再输入一个单词，为待查找的单词 $x$ 最后输入数字 $k$.</p><p><strong>输出描述：</strong><br>输出查找到 $x$ 的兄弟单词的个数 $m$ 然后输出查找到的按照字典顺序排序后的第 $k$ 个兄弟单词，没有符合第 $k$ 个的话则不用输出。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>3 abc bca cab abc 1</p></blockquote><blockquote><p>输出：<br>2<br>bca</p></blockquote><p><strong>示例2</strong></p><blockquote><p>输入：<br>6 cab ad abcd cba abc bca abc 1</p></blockquote><blockquote><p>输出：<br>3<br>bca</p></blockquote><p><strong>说明：</strong></p><blockquote><p>abc的兄弟单词有cab cba bca，所以输出3<br>经字典序排列后，变为bca cab cba，所以第1个字典序兄弟单词为bca  </p></blockquote><h3 id="字符串TopK"><a href="#字符串TopK" class="headerlink" title="字符串TopK"></a>字符串TopK</h3><p>需要先将所有兄弟字符串筛选出来，再根据字典序拿到第 $K$ 大的那个。<br>首先判断兄弟字符串，复杂度最好可以达到 $O(N)$，可以维护计数数组实现。<br>$TopK$ 问题可以使用堆，或者排序。推荐堆。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-22 10:25:49</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">constexpr</span> <span class="keyword">int</span> N = <span class="number">32</span>;</span><br><span class="line"><span class="keyword">int</span> cnt1[N], cnt2[N];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = a.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] != b[i]) <span class="keyword">return</span> a[i] &lt; b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">isBrother</span><span class="params">(<span class="built_in">string</span> a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span> (n != len) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">memset</span>(cnt2, <span class="number">0</span>, <span class="keyword">sizeof</span> cnt2);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) cnt2[a[i] - <span class="number">97</span>]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) </span><br><span class="line">        <span class="keyword">if</span> (cnt1[i] &amp;&amp; cnt1[i] != cnt2[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; n;) &#123;</span><br><span class="line">        <span class="built_in">string</span> t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">            v.push_back(t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    len = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) cnt1[s[i] - <span class="number">97</span>]++;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; bro;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;each : v) &#123;</span><br><span class="line">        <span class="keyword">if</span> (each.<span class="built_in">size</span>() != len || each == s) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (isBrother(each)) </span><br><span class="line">            bro.push_back(each);</span><br><span class="line">    &#125;</span><br><span class="line">    priority_queue&lt;<span class="built_in">string</span>, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;, cmp&gt; max_heap;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;each : bro) &#123;</span><br><span class="line">        max_heap.push(each);</span><br><span class="line">        <span class="keyword">for</span> (; max_heap.<span class="built_in">size</span>() &gt; k; max_heap.pop());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//for (; !max_heap.empty(); max_heap.pop()) cout &lt;&lt; max_heap.top() &lt;&lt; endl;</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; bro.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (max_heap.<span class="built_in">size</span>() &gt;= k ? max_heap.top() : <span class="string">""</span>) &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-22 10:54:35</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> N = <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] cnt1 = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(Scanner in)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        String[] ss = <span class="keyword">new</span> String[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            ss[i] = in.next();</span><br><span class="line">        &#125;</span><br><span class="line">        String s = in.next();</span><br><span class="line">        <span class="keyword">int</span> k = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> len = s.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            cnt1[s.charAt(i) - <span class="number">97</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        Queue&lt;String&gt; maxHeap = <span class="keyword">new</span> PriorityQueue&lt;&gt;(<span class="keyword">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String a, String b)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = a.length(); i &lt; n; i++) &#123;</span><br><span class="line">                    <span class="keyword">char</span> ca = a.charAt(i);</span><br><span class="line">                    <span class="keyword">char</span> cb = b.charAt(i);</span><br><span class="line">                    <span class="keyword">if</span> (ca != cb) <span class="keyword">return</span> cb - ca;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">int</span> broCnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String each : ss) &#123;</span><br><span class="line">            <span class="keyword">if</span> (each.length() != len || each.equals(s)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (isBrother(each)) &#123;</span><br><span class="line">                broCnt++;</span><br><span class="line">                maxHeap.add(each);</span><br><span class="line">                <span class="keyword">for</span> (; maxHeap.size() &gt; k; maxHeap.poll());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(broCnt);</span><br><span class="line">        <span class="keyword">if</span> (maxHeap.size() &gt;= k) System.out.println(maxHeap.peek());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isBrother</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] cnt2 = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">            cnt2[s.charAt(i) - <span class="number">97</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cnt1[i] != <span class="number">0</span> &amp;&amp; cnt1[i] != cnt2[i]) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            solve(in);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/03ba8aeeef73400ca7a37a5f3370fe68?tpId=37&&tqId=21250&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ27. 查找兄弟单词</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;字符串TopK问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="TopK" scheme="https://www.etoa.io/tags/TopK/"/>
    
      <category term="堆" scheme="https://www.etoa.io/tags/%E5%A0%86/"/>
    
      <category term="计数数组" scheme="https://www.etoa.io/tags/%E8%AE%A1%E6%95%B0%E6%95%B0%E7%BB%84/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ26. 字符串排序</title>
    <link href="https://www.etoa.io/2021/08/20/HJ26-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F/"/>
    <id>https://www.etoa.io/2021/08/20/HJ26-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F/</id>
    <published>2021-08-20T15:21:18.000Z</published>
    <updated>2021-08-20T16:37:58.028Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>经典的字符串排序问题。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>编写一个程序，将输入字符串中的字符按如下规则排序。</p><p>规则 1 ：英文字母从 $A$ 到 $Z$ 排列，不区分大小写。</p><p>如，输入： $Type$ 输出： $epTy$</p><p>规则 2 ：同一个英文字母的大小写同时存在时，按照输入顺序排列。</p><p>如，输入： $BabA$ 输出： $aABb$</p><p>规则 3 ：非英文字母的其它字符保持原来的位置。</p><p>如，输入： $By?e$ 输出： $Be?y$</p><p>注意有多组测试数据，即输入有多行，每一行单独处理（换行符隔开的表示不同行）</p><p><strong>输入描述：</strong><br>输入字符串</p><p><strong>输出描述：</strong><br>输出字符串</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>A Famous Saying: Much Ado About Nothing (2012/8).</p></blockquote><blockquote><p>输出：<br>A aaAAbc dFgghh: iimM nNn oooos Sttuuuy (2012/8).</p></blockquote><h3 id="自定义排序-双指针"><a href="#自定义排序-双指针" class="headerlink" title="自定义排序 + 双指针"></a>自定义排序 + 双指针</h3><p>遍历字符串，将字母单独拿出来，用一个类/结构体维护每个字母的状态：字母本身，ascii码位置（判断是否大小写忽略时仍相同），数组下标。<br>再根据每个字母的状态自定义排序。<br>最后维护双指针，将剔出来的字母放回到字符串原位置。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021年08月20日23:24:57</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">entity</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">int</span> ascii;</span><br><span class="line">    <span class="keyword">int</span> idx;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span> <span class="params">(entity a, entity b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.ascii != b.ascii) <span class="keyword">return</span> a.ascii &lt; b.ascii;</span><br><span class="line">    <span class="keyword">return</span> a.idx &lt; b.idx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="built_in">string</span> &amp;s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; <span class="title">st</span><span class="params">(n, <span class="literal">false</span>)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">vector</span>&lt;entity&gt; vec;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isalpha</span>(s[i])) &#123;</span><br><span class="line">            st[i] = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            entity ent;</span><br><span class="line">            ent.c = s[i];</span><br><span class="line">            ent.ascii = <span class="built_in">isupper</span>(s[i]) ? s[i] + <span class="number">32</span> : s[i];</span><br><span class="line">            ent.idx = i;</span><br><span class="line">            vec.push_back(ent);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), cmp);</span><br><span class="line">    <span class="built_in">string</span> res;</span><br><span class="line">    <span class="comment">// double ptr</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n &amp;&amp; j &lt; n;) &#123;</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; n &amp;&amp; st[i]; ++i) res += s[i];</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; n &amp;&amp; !st[i]; ++i, ++j) res += vec[j].c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (; getline(<span class="built_in">cin</span>, s);) &#123;</span><br><span class="line">        solve(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-20 23:52:36</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> ascii;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> idx;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Entity</span><span class="params">(<span class="keyword">char</span> c, <span class="keyword">int</span> ascii, <span class="keyword">int</span> idx)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.c = c;</span><br><span class="line">        <span class="keyword">this</span>.ascii = ascii;</span><br><span class="line">        <span class="keyword">this</span>.idx = idx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            String s = in.nextLine();</span><br><span class="line">            <span class="keyword">int</span> n = s.length();</span><br><span class="line">            <span class="keyword">boolean</span>[] st = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">            Arrays.fill(st, <span class="keyword">false</span>);</span><br><span class="line">            List&lt;Entity&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">                <span class="keyword">if</span> (!Character.isAlphabetic(c)) &#123;</span><br><span class="line">                    st[i] = <span class="keyword">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">int</span> ascii = Character.isUpperCase(c) ? c + <span class="number">32</span> : c;</span><br><span class="line">                    Entity ent = <span class="keyword">new</span> Entity(c, ascii, i);</span><br><span class="line">                    list.add(ent);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Collections.sort(list, <span class="keyword">new</span> Comparator&lt;Entity&gt;()&#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Entity a, Entity b)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (a.ascii != b.ascii) <span class="keyword">return</span> a.ascii - b.ascii;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">return</span> a.idx - b.idx;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n &amp;&amp; j &lt; n;) &#123;</span><br><span class="line">                <span class="keyword">for</span> (; i &lt; n &amp;&amp; st[i]; ++i) res.append(s.charAt(i));</span><br><span class="line">                <span class="keyword">for</span> (; i &lt; n &amp;&amp; j &lt; n &amp;&amp; !st[i]; ++i, ++j) res.append(list.get(j).c);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(res.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h3 id="遍历字母表-双指针"><a href="#遍历字母表-双指针" class="headerlink" title="遍历字母表 + 双指针"></a>遍历字母表 + 双指针</h3><p>这个解法思路奇特，按顺序遍历字母表，对于每个字母，如果其大写或小写在字符串中存在，就放到容器中，这样就可以做到按照字母顺序+下标顺序排序。</p><div class="tabs" id="g_tab1"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab1-1">C++</a></li><li class="tab"><a href="#g_tab1-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-21 00:29:23</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (; getline(<span class="built_in">cin</span>, s);) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; alpha;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">65</span>; i &lt; <span class="number">91</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s[j] == i || s[j] == i + <span class="number">32</span>) &#123;</span><br><span class="line">                    alpha.push_back(s[j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, len = alpha.<span class="built_in">size</span>(); i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isalpha</span>(s[i]) &amp;&amp; j &lt; len) res += alpha[j++];</span><br><span class="line">            <span class="keyword">else</span> res += s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab1-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-21 00:37:28</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            String s = in.nextLine();</span><br><span class="line">            <span class="keyword">int</span> n = s.length();</span><br><span class="line">            List&lt;Character&gt; alpha = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">65</span>; i &lt; <span class="number">91</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                    <span class="keyword">char</span> c = s.charAt(j);</span><br><span class="line">                    <span class="keyword">if</span> (c == i || c == i + <span class="number">32</span>) &#123;</span><br><span class="line">                        alpha.add(c);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, len = alpha.size(); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!Character.isAlphabetic(s.charAt(i))) res.append(s.charAt(i));</span><br><span class="line">                <span class="keyword">else</span> res.append(alpha.get(j++));</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(res.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="nowcoder.com/practice/5190a1db6f4f4ddb92fd9c365c944584?tpId=37&&tqId=21249&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking">HJ26. 字符串排序</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;经典的字符串排序问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://www.etoa.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="双指针" scheme="https://www.etoa.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ23. 删除字符串中出现次数最少的字符</title>
    <link href="https://www.etoa.io/2021/08/20/HJ23-%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E6%9C%80%E5%B0%91%E7%9A%84%E5%AD%97%E7%AC%A6/"/>
    <id>https://www.etoa.io/2021/08/20/HJ23-%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E6%9C%80%E5%B0%91%E7%9A%84%E5%AD%97%E7%AC%A6/</id>
    <published>2021-08-20T05:35:16.000Z</published>
    <updated>2021-08-20T05:46:01.138Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单的计次问题。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>实现删除字符串中出现次数最少的字符，若多个字符出现次数一样，则都删除。输出删除这些单词后的字符串，字符串中其它字符保持原来的顺序。<br>注意每个输入文件有多组输入，即多个字符串用回车隔开<br><strong>输入描述：</strong><br>字符串只包含小写英文字母, 不考虑非法输入，输入的字符串长度小于等于20个字节。</p><p><strong>输出描述：</strong><br>删除字符串中出现次数最少的字符后的字符串。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>abcdd<br>aabcddd</p></blockquote><blockquote><p>输出：<br>dd<br>aaddd</p></blockquote><hr><h3 id="计次"><a href="#计次" class="headerlink" title="计次"></a>计次</h3><p>只需将每个字符的出现次数记录下来，找到最小出现次数，再构建答案。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-20 13:37:27</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">constexpr</span> <span class="keyword">int</span> N = <span class="number">128</span>;</span><br><span class="line"><span class="keyword">int</span> cnt[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; s; <span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span> cnt)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">            cnt[s[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> minval = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">97</span>; i &lt; <span class="number">123</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cnt[i]) minval = <span class="built_in">min</span>(minval, cnt[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cnt[s[i]] != minval) res += s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-20 13:44:39</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> N = <span class="number">128</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] cnt = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext(); Arrays.fill(cnt, <span class="number">0x0</span>)) &#123;</span><br><span class="line">            String s = in.next();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">                cnt[c]++;    <span class="comment">// 类型自动提升</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> mn = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">97</span>; i &lt; <span class="number">123</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (cnt[i] != <span class="number">0</span>) mn = Math.min(mn, cnt[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (cnt[s.charAt(i)] != mn) res.append(s.charAt(i));</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(res.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/05182d328eb848dda7fdd5e029a56da9?tpId=37&&tqId=21246&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ23. 删除字符串中出现次数最少的字符</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单的计次问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ22. 汽水瓶</title>
    <link href="https://www.etoa.io/2021/08/20/HJ22-%E6%B1%BD%E6%B0%B4%E7%93%B6/"/>
    <id>https://www.etoa.io/2021/08/20/HJ22-%E6%B1%BD%E6%B0%B4%E7%93%B6/</id>
    <published>2021-08-20T03:35:23.000Z</published>
    <updated>2021-08-20T05:14:29.761Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单模拟题。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>有这样一道智力题：“某商店规定：三个空汽水瓶可以换一瓶汽水。小张手上有十个空汽水瓶，她最多可以换多少瓶汽水喝？”答案是 $5$ 瓶，方法如下：先用 $9$ 个空瓶子换 $3$ 瓶汽水，喝掉 $3$ 瓶满的，喝完以后 $4$ 个空瓶子，用 $3$ 个再换一瓶，喝掉这瓶满的，这时候剩 $2$ 个空瓶子。然后你让老板先借给你一瓶汽水，喝掉这瓶满的，喝完以后用 $3$ 个空瓶子换一瓶满的还给老板。如果小张手上有 $n$ 个空汽水瓶，最多可以换多少瓶汽水喝？</p><p><strong>输入描述：</strong><br>输入文件最多包含 $10$ 组测试数据，每个数据占一行，仅包含一个正整数 $n$（$1&lt;=n&lt;=100$），表示小张手上的空汽水瓶数。$n=0$ 表示输入结束，你的程序不应当处理这一行。</p><p><strong>输出描述：</strong><br>对于每组测试数据，输出一行，表示最多可以喝的汽水瓶数。如果一瓶也喝不到，输出 $0$。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>3<br>10<br>81<br>0</p></blockquote><blockquote><p>输出：<br>1<br>5<br>40</p></blockquote><h3 id="简单模拟"><a href="#简单模拟" class="headerlink" title="简单模拟"></a>简单模拟</h3><p>直接模拟过程即可，需要注意的是最终的到 $2$ 个空瓶的时候，还可以获得一瓶。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-20 11:38:58</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; n; ) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!n) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; n &gt; <span class="number">2</span>;) &#123;</span><br><span class="line">            <span class="keyword">int</span> bottle = n / <span class="number">3</span>;</span><br><span class="line">            res += bottle;</span><br><span class="line">            n %= <span class="number">3</span>;</span><br><span class="line">            n += bottle;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (n == <span class="number">2</span> ? res + <span class="number">1</span> : res) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * code at: 2021-08-20 13:12:26</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (; n &gt; <span class="number">2</span>;) &#123;</span><br><span class="line">                <span class="keyword">int</span> bottle = n / <span class="number">3</span>;</span><br><span class="line">                n %= <span class="number">3</span>;</span><br><span class="line">                n += bottle;</span><br><span class="line">                res += bottle;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">2</span>) System.out.println(res + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> System.out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/fe298c55694f4ed39e256170ff2c205f?tpId=37&&tqId=21245&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ22. 汽水瓶</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单模拟题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ21. 简单密码</title>
    <link href="https://www.etoa.io/2021/08/20/HJ21-%E7%AE%80%E5%8D%95%E5%AF%86%E7%A0%81/"/>
    <id>https://www.etoa.io/2021/08/20/HJ21-%E7%AE%80%E5%8D%95%E5%AF%86%E7%A0%81/</id>
    <published>2021-08-20T02:25:55.000Z</published>
    <updated>2021-08-20T02:58:38.435Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单字符串处理，对着ASCII码表做。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>密码是我们生活中非常重要的东东，我们的那么一点不能说的秘密就全靠它了。哇哈哈. 接下来渊子要在密码之上再加一套密码，虽然简单但也安全。</p><p>假设渊子原来一个BBS上的密码为 $zvbo9441987$,为了方便记忆，他通过一种算法把这个密码变换成 $YUANzhi1987$，这个密码是他的名字和出生年份，怎么忘都忘不了，而且可以明目张胆地放在显眼的地方而不被别人知道真正的密码。</p><p>他是这么变换的，大家都知道手机上的字母：<br>$1–1, abc–2, def–3, ghi–4, jkl–5, mno–6, pqrs–7, tuv–8, wxyz–9, 0–0$,就这么简单，渊子把密码中出现的小写字母都变成对应的数字，数字和其他的符号都不做变换，</p><p>声明：密码中没有空格，而密码中出现的大写字母则变成小写之后往后移一位，如：$X$，先变成小写，再往后移一位，不就是 $y$ 了嘛，简单吧。记住，$z$ 往后移是 $a$ 哦。</p><p><strong>输入描述：</strong><br>输入包括多个测试数据。输入是一个明文，密码长度不超过 $100$ 个字符，输入直到文件结尾</p><p><strong>输出描述：</strong><br>输出渊子真正的密文</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>YUANzhi1987</p></blockquote><blockquote><p>输出：<br>zvbo9441987</p></blockquote><h3 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h3><p>根据规则按照ASCII码处理即可，这道题可以帮助自己熟悉常见字符的ASCII码。<br>以下是常见的字符和ASCII码的对应关系：</p><ul><li>数字 $0: 48$</li><li>数字 $9: 48 + 9$</li><li>字母 $A: 65$</li><li>字母 $Z: 65 + 25$</li><li>字母 $a: 97$</li><li>字母 $z: 97 + 25$</li></ul><p>还有个需要关注的是，大写字母转为对应的小写字母是 $+ 32$.</p><p>本题还有个需要注意的是，当大写字母转小写字母 $+ 1$ 溢出最后一位的时候，会回到 $a$.</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-20 10:35:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">constexpr</span> <span class="keyword">int</span> N = <span class="number">26</span>;</span><br><span class="line"><span class="keyword">int</span> hashmap[N] = &#123;<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="built_in">string</span> res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isupper</span>(s[i])) res += (s[i] + <span class="number">32</span> + <span class="number">1</span>) &gt; <span class="number">122</span> ? (s[i] + <span class="number">32</span> + <span class="number">1</span>) % <span class="number">123</span> + <span class="number">97</span> : (s[i] + <span class="number">32</span> + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">islower</span>(s[i])) res += hashmap[s[i] - <span class="number">97</span>] + <span class="number">48</span>;</span><br><span class="line">        <span class="keyword">else</span> res += s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-20 10:58:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] hash = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.nextLine();</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (Character.isUpperCase(c)) res.append(c + <span class="number">32</span> + <span class="number">1</span> &gt; <span class="number">122</span> ? (<span class="keyword">char</span>)((c + <span class="number">32</span> + <span class="number">1</span>) % <span class="number">123</span> + <span class="number">97</span>) : (<span class="keyword">char</span>)(c + <span class="number">32</span> + <span class="number">1</span>));</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (Character.isLowerCase(c)) res.append((<span class="keyword">char</span>)(hash[c - <span class="number">97</span>] + <span class="number">48</span>));    </span><br><span class="line">            <span class="keyword">else</span> res.append(c);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><p>注意Java <code>int</code> 类型的ASCII码转 <code>char</code> 需要强转，（高类型转低类型）。</p><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/7960b5038a2142a18e27e4c733855dac?tpId=37&&tqId=21244&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ21. 简单密码</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单字符串处理，对着ASCII码表做。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ20. 密码验证合格程序</title>
    <link href="https://www.etoa.io/2021/08/19/HJ20-%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E5%90%88%E6%A0%BC%E7%A8%8B%E5%BA%8F/"/>
    <id>https://www.etoa.io/2021/08/19/HJ20-%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E5%90%88%E6%A0%BC%E7%A8%8B%E5%BA%8F/</id>
    <published>2021-08-19T12:54:25.000Z</published>
    <updated>2021-08-20T01:56:53.620Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>考察字符串处理，巧用位运算记录字符种类。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>密码要求:</p><ol><li>长度超过8位</li><li>包括大小写字母.数字.其它符号,以上四种至少三种</li><li>不能有相同长度大于2的子串重复</li></ol><p><strong>输入描述：</strong><br>一组或多组长度超过 $2$ 的字符串。每组占一行</p><p><strong>输出描述：</strong><br>如果符合要求输出：$OK$，否则输出 $NG$</p><p><strong>示例1</strong></p><blockquote><p><strong>输入：</strong></p></blockquote><ul><li>$021Abc9000$</li><li>$021Abc9Abc1$</li><li>$021ABC9000$</li><li>$021(bc9000$</li></ul><blockquote><p><strong>输出：</strong></p></blockquote><ul><li>$OK$</li><li>$NG$</li><li>$NG$</li><li>$OK$</li></ul><h3 id="字符串处理-位运算"><a href="#字符串处理-位运算" class="headerlink" title="字符串处理 + 位运算"></a>字符串处理 + 位运算</h3><p>我们根据题意依次判断几种不符合要求的条件即可。<br>关键在于判断子串的重复性，题目指出长度大于 $2$ 的子串不能重复，那么从长度为 $3$ 开始判断子串的重复性，如果无重复那么长度大于 $3$ 的子串也一定无重复。</p><p>简单证明：<br>假设长度为 $3$ 的子串经判断无重复，且长度大于 $3$ 的子串存在重复。那么因为长度大于 $3$ 的子串存在长度为 $3$ 的子串且重复，与假设相矛盾。<br>故假设不成立。<br>得证。</p><p>另外，在判断字符种类的时候，可以使用位运算辅助判断。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-06-06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">SubStringDetermine</span><span class="params">(<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; hash;</span><br><span class="line">    <span class="comment">// i : length of sub string</span></span><br><span class="line">    <span class="comment">//for (int len = 3; len &lt; s.size() - 1; len++)</span></span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">3</span>;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>() - len + <span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> sub = s.substr(i, len);</span><br><span class="line">            hash[sub] = hash[sub] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (hash[sub] &gt; <span class="number">1</span>) </span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">TypeDetermine</span><span class="params">(<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isupper</span>(c))</span><br><span class="line">            cnt |= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">islower</span>(c))</span><br><span class="line">            cnt |= (<span class="number">1</span> &lt;&lt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c))</span><br><span class="line">            cnt |= (<span class="number">1</span> &lt;&lt; <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            cnt |= (<span class="number">1</span> &lt;&lt; <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// count 1</span></span><br><span class="line">    <span class="keyword">int</span> type = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; cnt; cnt -= (lowbit(cnt)))</span><br><span class="line">        type++;</span><br><span class="line">    <span class="keyword">return</span> type &gt;= <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">SizeDetermine</span><span class="params">(<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s.<span class="built_in">size</span>() &gt; <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (;getline(<span class="built_in">cin</span>, s);)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (SizeDetermine(s) &amp;&amp; TypeDetermine(s) &amp;&amp; SubStringDetermine(s)) </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"OK"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"NG"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-19 21:20:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">substringDetermine</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">3</span>;</span><br><span class="line">        Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n - len; i++) &#123;</span><br><span class="line">            String sub = s.substring(i, i + len);</span><br><span class="line">            <span class="keyword">if</span> (set.contains(sub)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            set.add(sub);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">typeDetermine</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (Character.isUpperCase(c)) cnt |= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (Character.isLowerCase(c)) cnt |= <span class="number">1</span> &lt;&lt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (Character.isDigit(c)) cnt |= <span class="number">1</span> &lt;&lt; <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span> cnt |= <span class="number">1</span> &lt;&lt; <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> type = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; cnt != <span class="number">0</span>; cnt -= lowbit(cnt)) ++type;</span><br><span class="line">        <span class="keyword">return</span> type &gt;= <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s;</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            s = in.nextLine();</span><br><span class="line">            <span class="keyword">if</span> (s.length() &lt;= <span class="number">8</span> || !typeDetermine(s) || !substringDetermine(s)) &#123;</span><br><span class="line">                System.out.println(<span class="string">"NG"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"OK"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/184edec193864f0985ad2684fbc86841?tpId=37&&tqId=21243&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ20. 密码验证合格程序</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;考察字符串处理，巧用位运算记录字符种类。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="位运算" scheme="https://www.etoa.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ17. 坐标移动</title>
    <link href="https://www.etoa.io/2021/08/19/HJ17-%E5%9D%90%E6%A0%87%E7%A7%BB%E5%8A%A8/"/>
    <id>https://www.etoa.io/2021/08/19/HJ17-%E5%9D%90%E6%A0%87%E7%A7%BB%E5%8A%A8/</id>
    <published>2021-08-19T02:43:05.000Z</published>
    <updated>2021-08-19T03:54:36.060Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>其实是一道字符串处理题目。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>开发一个坐标计算工具， $A$ 表示向左移动，$D$ 表示向右移动，$W$ 表示向上移动，$S$ 表示向下移动。从 $(0,0)$ 点开始移动，从输入字符串里面读取一些坐标，并将最终输入结果输出到输出文件里面。</p><p><strong>输入：</strong></p><p>合法坐标为 $A$(或者 $D$ 或者 $W$ 或者 $S$) + 数字（两位以内）</p><p>坐标之间以 $;$ 分隔。</p><p>非法坐标点需要进行丢弃。如 $AA10;  A1A;  $%$;  YAD;$ 等。</p><p>下面是一个简单的例子 如：</p><p>$A10;S20;W10;D30;X;A1A;B10A11;;A10;$</p><p>处理过程：</p><p>起点 $(0,0)$</p><ul><li><p>$A10   =  （-10,0）$</p></li><li><p>$S20   =  (-10,-20)$</p></li><li><p>$W10  =  (-10,-10)$</p></li><li><p>$D30  =  (20,-10)$</p></li><li><p>$x$    =  无效</p></li><li><p>$A1A$   =  无效</p></li><li><p>$B10A11$   =  无效</p></li><li><p>一个空 不影响</p></li><li><p>$A10  =  (10,-10)$</p></li></ul><p>结果 $(10， -10)$</p><p><strong>注意请处理多组输入输出</strong></p><p><strong>输入描述：</strong><br>一行字符串</p><p><strong>输出描述：</strong><br>最终坐标，以逗号分隔</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>$A10;S20;W10;D30;X;A1A;B10A11;;A10;$</p></blockquote><blockquote><p>输出：<br>$10,-10$</p></blockquote><h3 id="字符串分割"><a href="#字符串分割" class="headerlink" title="字符串分割"></a>字符串分割</h3><p>首先将操作指令从字符串中分割出来，对于每一个操作指令，提取其中的坐标偏移。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-19 10:55:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_set</span>&lt;<span class="keyword">int</span>&gt; st = &#123;<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'W'</span>, <span class="string">'S'</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> x first</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> y second</span></span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vec;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">string</span> t;</span><br><span class="line">        <span class="keyword">int</span> j = i;</span><br><span class="line">        <span class="keyword">for</span> (; j &lt; n &amp;&amp; s[j] != <span class="string">';'</span>; j++) &#123;</span><br><span class="line">            t += s[j];</span><br><span class="line">        &#125;</span><br><span class="line">        i = j;</span><br><span class="line">        vec.push_back(t);</span><br><span class="line">    &#125;</span><br><span class="line">    pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pos = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;each : vec) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!each.<span class="built_in">size</span>() || !st.count(each[<span class="number">0</span>])) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> offset = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; each.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">isdigit</span>(each[i])) &#123;</span><br><span class="line">                offset = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            offset = offset * <span class="number">10</span> + each[i] - <span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; each &lt;&lt; ": " &lt;&lt; offset &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">switch</span> (each[<span class="number">0</span>]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'A'</span>: pos.x -= offset; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'D'</span>: pos.x += offset; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'W'</span>: pos.y += offset; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'S'</span>: pos.y -= offset; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; each &lt;&lt; ": " &lt;&lt; pos.x &lt;&lt; ',' &lt;&lt; pos.y &lt;&lt; endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; pos.x &lt;&lt; <span class="string">','</span> &lt;&lt; pos.y &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021年08月19日11:53:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.nextLine();</span><br><span class="line">        String[] ops = s.split(<span class="string">";"</span>);</span><br><span class="line">        List&lt;Character&gt; list = Arrays.asList(<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'W'</span>, <span class="string">'S'</span>);</span><br><span class="line">        Set&lt;Character&gt; hash = <span class="keyword">new</span> HashSet&lt;&gt;(list);</span><br><span class="line">        <span class="keyword">int</span>[] pos = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (String each : ops) &#123;</span><br><span class="line">            <span class="keyword">if</span> (each.length() == <span class="number">0</span> || !hash.contains(each.charAt(<span class="number">0</span>))) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> offset = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; each.length(); i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!Character.isDigit(each.charAt(i))) &#123;</span><br><span class="line">                    offset = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                offset = offset * <span class="number">10</span> + each.charAt(i) - <span class="number">0x30</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            System.out.println(String.valueOf(offset));</span></span><br><span class="line">            <span class="keyword">switch</span> (each.charAt(<span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'A'</span>: pos[<span class="number">0</span>] -= offset; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'D'</span>: pos[<span class="number">0</span>] += offset; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'W'</span>: pos[<span class="number">1</span>] += offset; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'S'</span>: pos[<span class="number">1</span>] -= offset; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(String.valueOf(pos[<span class="number">0</span>]) + <span class="string">","</span> + String.valueOf(pos[<span class="number">1</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><p>苦于C++的STL没有split，只能手写实现，算法复杂度是 $O(N)$，还是很快的。</p><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/119bcca3befb405fbe58abe9c532eb29?tpId=37&&tqId=21240&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ17. 坐标移动</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;其实是一道字符串处理题目。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ15. 求int类型正整数在内存中存储时1的个数</title>
    <link href="https://www.etoa.io/2021/08/19/HJ15-%E6%B1%82int%E7%B1%BB%E5%9E%8B%E6%AD%A3%E6%95%B4%E6%95%B0%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E5%AD%98%E5%82%A8%E6%97%B61%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <id>https://www.etoa.io/2021/08/19/HJ15-%E6%B1%82int%E7%B1%BB%E5%9E%8B%E6%AD%A3%E6%95%B4%E6%95%B0%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E5%AD%98%E5%82%A8%E6%97%B61%E7%9A%84%E4%B8%AA%E6%95%B0/</id>
    <published>2021-08-19T01:48:02.000Z</published>
    <updated>2021-08-19T02:01:40.657Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>二进制中1的个数，老入门题了。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>输入一个 <code>int</code> 型的正整数，计算出该 <code>int</code> 型数据在内存中存储时 $1$ 的个数。</p><p><strong>输入描述：</strong><br> 输入一个整数（<code>int</code> 类型）</p><p><strong>输出描述：</strong><br> 这个数转换成 $2$ 进制后，输出 $1$ 的个数</p><p><strong>示例1</strong></p><blockquote><p><strong>输入：</strong><br>5</p></blockquote><blockquote><p><strong>输出：</strong><br>2</p></blockquote><h3 id="lowbit"><a href="#lowbit" class="headerlink" title="lowbit"></a>lowbit</h3><p><code>lowbit</code> 返回二进制数中最低位的 $1$ 及后面的 $0$（所构成的数）。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-19 09:51:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int64_t</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int64_t</span> x)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; n; n -= lowbit(n)) &#123;</span><br><span class="line">        res++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-19 09:54:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">long</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; n != <span class="number">0</span>; n -= lowbit(n)) &#123;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/440f16e490a0404786865e99c6ad91c9?tpId=37&&tqId=21238&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ15. 求int类型正整数在内存中存储时1的个数</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;二进制中1的个数，老入门题了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="位运算" scheme="https://www.etoa.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="lowbit" scheme="https://www.etoa.io/tags/lowbit/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ14. 字符串排序</title>
    <link href="https://www.etoa.io/2021/08/18/HJ14-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F/"/>
    <id>https://www.etoa.io/2021/08/18/HJ14-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F/</id>
    <published>2021-08-18T14:41:37.000Z</published>
    <updated>2021-08-18T15:08:39.533Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>熟悉C++和Java的排序轮子。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>给定 $n$ 个字符串，请对 $n$ 个字符串按照字典序排列。</p><p><strong>输入描述：</strong><br>输入第一行为一个正整数 $n(1≤n≤1000)$,下面 $n$ 行为 $n$ 个字符串(字符串长度 $≤100$),字符串中只含有大小写字母。</p><p><strong>输出描述：</strong><br>数据输出 $n$ 行，输出结果为按照字典序排列的字符串。</p><p><strong>示例1</strong></p><blockquote><p><strong>输入：</strong><br>9<br>cap<br>to<br>cat<br>card<br>two<br>too<br>up<br>boat<br>boot</p></blockquote><blockquote><p><strong>输出：</strong><br>boat<br>boot<br>cap<br>card<br>cat<br>to<br>too<br>two<br>up</p></blockquote><h3 id="Sort"><a href="#Sort" class="headerlink" title="Sort"></a>Sort</h3><p>重点关注C++和Java的排序轮子使用。其实这些排序轮子都默认对字符串按照字典序排序。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 22:44:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; <span class="title">vec</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; vec[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;each : vec) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; each &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 23:05:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            String s = in.next();</span><br><span class="line">            list.add(s);</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">for</span> (String each : list) &#123;</span><br><span class="line">            System.out.println(each);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/5af18ba2eb45443aa91a11e848aa6723?tpId=37&&tqId=21237&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ14. 字符串排序</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;熟悉C++和Java的排序轮子。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ13. 句子逆序</title>
    <link href="https://www.etoa.io/2021/08/18/HJ13-%E5%8F%A5%E5%AD%90%E9%80%86%E5%BA%8F/"/>
    <id>https://www.etoa.io/2021/08/18/HJ13-%E5%8F%A5%E5%AD%90%E9%80%86%E5%BA%8F/</id>
    <published>2021-08-18T14:18:31.000Z</published>
    <updated>2021-08-18T14:36:21.126Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单栈的应用。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>将一个英文语句以单词为单位逆序排放。例如“I am a boy”，逆序排放后为“boy a am I”<br>所有单词之间用一个空格隔开，语句中除了英文字母外，不再包含其他字符</p><p><strong>输入描述：</strong><br>输入一个英文语句，每个单词用空格隔开。保证输入只包含空格和字母。</p><p><strong>输出描述：</strong><br>得到逆序的句子</p><p><strong>示例1</strong></p><blockquote><p><strong>输入：</strong><br>I am a boy</p></blockquote><blockquote><p><strong>输出：</strong><br>boy a am I</p></blockquote><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><p>注意Java语言中，<code>StringBuilder</code> 的清空有三种常见的方式。<br><code>StringBuilder sb = new StringBuilder();</code></p><ul><li><ol><li><code>sb.setLength(0);</code></li></ol></li><li><ol start="2"><li><code>sb.delete(0. sb.length());</code></li></ol></li><li><ol start="3"><li>生成新的StringBuilder对象，旧的由GC回收。</li></ol></li></ul><p>三种方法最快的是第一种，第二种次之（差别很小），最慢的是第三种。<br>另外注意第二种方式，第二个index指向 <code>StringBuilder</code> 最后一个字符下标的后一位。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021年08月18日22:20:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    s += <span class="string">' '</span>;</span><br><span class="line">    <span class="built_in">string</span> tmp = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">' '</span>) &#123;</span><br><span class="line">            stk.push(tmp);</span><br><span class="line">            tmp = <span class="string">""</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tmp += s[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; !stk.empty(); stk.pop()) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; stk.top() &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 22:34:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.nextLine();</span><br><span class="line">        s += <span class="string">" "</span>;</span><br><span class="line">        LinkedList&lt;String&gt; stk = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chs[i] == <span class="string">' '</span>) &#123;</span><br><span class="line">                stk.addLast(sb.toString());</span><br><span class="line">                sb.setLength(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sb.append(chs[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (; !stk.isEmpty();) &#123;</span><br><span class="line">            System.out.print(stk.removeLast() + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/48b3cb4e3c694d9da5526e6255bb73c3?tpId=37&&tqId=21236&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ13. 句子逆序</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单栈的应用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="栈" scheme="https://www.etoa.io/tags/%E6%A0%88/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ12. 字符串反转</title>
    <link href="https://www.etoa.io/2021/08/18/HJ12-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC/"/>
    <id>https://www.etoa.io/2021/08/18/HJ12-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC/</id>
    <published>2021-08-18T10:20:09.000Z</published>
    <updated>2021-08-18T14:36:35.373Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单字符串反转，有大概一万种做法。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>接受一个只包含小写字母的字符串，然后输出该字符串反转后的字符串。（字符串长度不超过 $1000$）</p><p><strong>输入描述：</strong><br>输入一行，为一个只包含小写字母的字符串。</p><p><strong>输出描述：</strong><br>输出该字符串反转后的字符串。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>abcd</p></blockquote><blockquote><p>输出：<br>dcba</p></blockquote><h3 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h3><p>这题主要考察字符串反转，方法有一万种。选一种自己喜欢的就好。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 18:22:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    reverse(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 18:28:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.next();</span><br><span class="line">        System.out.println(<span class="keyword">new</span> StringBuilder(s).reverse().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/e45e078701ab4e4cb49393ae30f1bb04?tpId=37&&tqId=21235&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ12. 字符串反转</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单字符串反转，有大概一万种做法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ11. 数字颠倒</title>
    <link href="https://www.etoa.io/2021/08/18/HJ11-%E6%95%B0%E5%AD%97%E9%A2%A0%E5%80%92/"/>
    <id>https://www.etoa.io/2021/08/18/HJ11-%E6%95%B0%E5%AD%97%E9%A2%A0%E5%80%92/</id>
    <published>2021-08-18T09:51:33.000Z</published>
    <updated>2021-08-18T10:16:06.825Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>Integer to String reverse.</p><a id="more"></a><h3 id="反转整数"><a href="#反转整数" class="headerlink" title="反转整数"></a>反转整数</h3><p>将数字每一位to string，逆序保存。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 17:56:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">string</span> s = n ? <span class="string">""</span> : <span class="string">"0"</span>;</span><br><span class="line">    <span class="keyword">for</span> (; n; n /= <span class="number">10</span>) &#123;</span><br><span class="line">        s += n % <span class="number">10</span> + <span class="number">0x30</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021年08月18日18:13:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        StringBuilder sb = n == <span class="number">0</span> ? <span class="keyword">new</span> StringBuilder(<span class="string">"0"</span>) : <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (; n != <span class="number">0</span>; n /= <span class="number">10</span>) &#123;</span><br><span class="line">            sb.append((<span class="keyword">char</span>)(n % <span class="number">10</span> + <span class="number">0x30</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/ae809795fca34687a48b172186e3dafe?tpId=37&&tqId=21234&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ11. 数字颠倒</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;Integer to String reverse.&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://www.etoa.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ10. 字符个数统计</title>
    <link href="https://www.etoa.io/2021/08/17/HJ10-%E5%AD%97%E7%AC%A6%E4%B8%AA%E6%95%B0%E7%BB%9F%E8%AE%A1/"/>
    <id>https://www.etoa.io/2021/08/17/HJ10-%E5%AD%97%E7%AC%A6%E4%B8%AA%E6%95%B0%E7%BB%9F%E8%AE%A1/</id>
    <published>2021-08-17T14:47:48.000Z</published>
    <updated>2021-08-17T15:31:02.346Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单哈希表的使用。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>编写一个函数，计算字符串中含有的不同字符的个数。字符在ASCII码范围内($0$~$127$，包括 $0$ 和 $127$)，换行表示结束符，不算在字符里。不在范围内的不作统计。多个相同的字符只计算一次<br>例如，对于字符串abaca而言，有a、b、c三种不同的字符，因此输出 $3$。</p><p><strong>输入描述：</strong><br>输入一行没有空格的字符串。</p><p><strong>输出描述：</strong><br>输出 输入字符串 中范围在($0$~$127$，包括 $0$ 和 $127$)字符的种数。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>abc</p></blockquote><blockquote><p>输出：<br>3</p></blockquote><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><p>很容易想到维护一个哈希表或者集合统计所有出现过的字符。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        st[s[i]] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; st.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.next();</span><br><span class="line">        Map&lt;Character, Boolean&gt; hash = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = chs.length; i &lt; n; i++) &#123;</span><br><span class="line">            hash.put(chs[i], <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(hash.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h3 id="bitset"><a href="#bitset" class="headerlink" title="bitset"></a>bitset</h3><p>当然也可以使用bitset记录所有出现过的字符。</p><div class="tabs" id="g_tab1"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab1-1">C++</a></li><li class="tab"><a href="#g_tab1-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-17 23:15:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="built_in">bitset</span>&lt;130&gt; bs;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        bs[s[i]] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; bs.count() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab1-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-17 23:13:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.next();</span><br><span class="line">        BitSet bitset = <span class="keyword">new</span> BitSet(<span class="number">130</span>);</span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = chs.length; i &lt; n; i++) &#123;</span><br><span class="line">            bitset.set(chs[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(bitset.cardinality());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/eb94f6a5b2ba49c6ac72d40b5ce95f50?tpId=37&&tqId=21233&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ10. 字符个数统计</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单哈希表的使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://www.etoa.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="哈希表" scheme="https://www.etoa.io/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
      <category term="NowCoder" scheme="https://www.etoa.io/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://www.etoa.io/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
      <category term="bitset" scheme="https://www.etoa.io/tags/bitset/"/>
    
  </entry>
  
</feed>

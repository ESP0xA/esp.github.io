<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dirac Sea</title>
  
  <subtitle>where the water tastes like wine</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://accepted.org.cn/"/>
  <updated>2021-08-19T03:54:36.060Z</updated>
  <id>https://accepted.org.cn/</id>
  
  <author>
    <name>etoa</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HJ17. 坐标移动</title>
    <link href="https://accepted.org.cn/2021/08/19/HJ17-%E5%9D%90%E6%A0%87%E7%A7%BB%E5%8A%A8/"/>
    <id>https://accepted.org.cn/2021/08/19/HJ17-%E5%9D%90%E6%A0%87%E7%A7%BB%E5%8A%A8/</id>
    <published>2021-08-19T02:43:05.000Z</published>
    <updated>2021-08-19T03:54:36.060Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>其实是一道字符串处理题目。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>开发一个坐标计算工具， $A$ 表示向左移动，$D$ 表示向右移动，$W$ 表示向上移动，$S$ 表示向下移动。从 $(0,0)$ 点开始移动，从输入字符串里面读取一些坐标，并将最终输入结果输出到输出文件里面。</p><p><strong>输入：</strong></p><p>合法坐标为 $A$(或者 $D$ 或者 $W$ 或者 $S$) + 数字（两位以内）</p><p>坐标之间以 $;$ 分隔。</p><p>非法坐标点需要进行丢弃。如 $AA10;  A1A;  $%$;  YAD;$ 等。</p><p>下面是一个简单的例子 如：</p><p>$A10;S20;W10;D30;X;A1A;B10A11;;A10;$</p><p>处理过程：</p><p>起点 $(0,0)$</p><ul><li><p>$A10   =  （-10,0）$</p></li><li><p>$S20   =  (-10,-20)$</p></li><li><p>$W10  =  (-10,-10)$</p></li><li><p>$D30  =  (20,-10)$</p></li><li><p>$x$    =  无效</p></li><li><p>$A1A$   =  无效</p></li><li><p>$B10A11$   =  无效</p></li><li><p>一个空 不影响</p></li><li><p>$A10  =  (10,-10)$</p></li></ul><p>结果 $(10， -10)$</p><p><strong>注意请处理多组输入输出</strong></p><p><strong>输入描述：</strong><br>一行字符串</p><p><strong>输出描述：</strong><br>最终坐标，以逗号分隔</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>$A10;S20;W10;D30;X;A1A;B10A11;;A10;$</p></blockquote><blockquote><p>输出：<br>$10,-10$</p></blockquote><h3 id="字符串分割"><a href="#字符串分割" class="headerlink" title="字符串分割"></a>字符串分割</h3><p>首先将操作指令从字符串中分割出来，对于每一个操作指令，提取其中的坐标偏移。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-19 10:55:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_set</span>&lt;<span class="keyword">int</span>&gt; st = &#123;<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'W'</span>, <span class="string">'S'</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> x first</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> y second</span></span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vec;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">string</span> t;</span><br><span class="line">        <span class="keyword">int</span> j = i;</span><br><span class="line">        <span class="keyword">for</span> (; j &lt; n &amp;&amp; s[j] != <span class="string">';'</span>; j++) &#123;</span><br><span class="line">            t += s[j];</span><br><span class="line">        &#125;</span><br><span class="line">        i = j;</span><br><span class="line">        vec.push_back(t);</span><br><span class="line">    &#125;</span><br><span class="line">    pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pos = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;each : vec) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!each.<span class="built_in">size</span>() || !st.count(each[<span class="number">0</span>])) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> offset = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; each.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">isdigit</span>(each[i])) &#123;</span><br><span class="line">                offset = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            offset = offset * <span class="number">10</span> + each[i] - <span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; each &lt;&lt; ": " &lt;&lt; offset &lt;&lt; endl;</span></span><br><span class="line">        <span class="keyword">switch</span> (each[<span class="number">0</span>]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'A'</span>: pos.x -= offset; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'D'</span>: pos.x += offset; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'W'</span>: pos.y += offset; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'S'</span>: pos.y -= offset; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; each &lt;&lt; ": " &lt;&lt; pos.x &lt;&lt; ',' &lt;&lt; pos.y &lt;&lt; endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; pos.x &lt;&lt; <span class="string">','</span> &lt;&lt; pos.y &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021年08月19日11:53:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.nextLine();</span><br><span class="line">        String[] ops = s.split(<span class="string">";"</span>);</span><br><span class="line">        List&lt;Character&gt; list = Arrays.asList(<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'W'</span>, <span class="string">'S'</span>);</span><br><span class="line">        Set&lt;Character&gt; hash = <span class="keyword">new</span> HashSet&lt;&gt;(list);</span><br><span class="line">        <span class="keyword">int</span>[] pos = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (String each : ops) &#123;</span><br><span class="line">            <span class="keyword">if</span> (each.length() == <span class="number">0</span> || !hash.contains(each.charAt(<span class="number">0</span>))) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> offset = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; each.length(); i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!Character.isDigit(each.charAt(i))) &#123;</span><br><span class="line">                    offset = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                offset = offset * <span class="number">10</span> + each.charAt(i) - <span class="number">0x30</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            System.out.println(String.valueOf(offset));</span></span><br><span class="line">            <span class="keyword">switch</span> (each.charAt(<span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'A'</span>: pos[<span class="number">0</span>] -= offset; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'D'</span>: pos[<span class="number">0</span>] += offset; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'W'</span>: pos[<span class="number">1</span>] += offset; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'S'</span>: pos[<span class="number">1</span>] -= offset; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(String.valueOf(pos[<span class="number">0</span>]) + <span class="string">","</span> + String.valueOf(pos[<span class="number">1</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><p>苦于C++的STL没有split，只能手写实现，算法复杂度是 $O(N)$，还是很快的。</p><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/119bcca3befb405fbe58abe9c532eb29?tpId=37&&tqId=21240&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ17. 坐标移动</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;其实是一道字符串处理题目。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ15. 求int类型正整数在内存中存储时1的个数</title>
    <link href="https://accepted.org.cn/2021/08/19/HJ15-%E6%B1%82int%E7%B1%BB%E5%9E%8B%E6%AD%A3%E6%95%B4%E6%95%B0%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E5%AD%98%E5%82%A8%E6%97%B61%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <id>https://accepted.org.cn/2021/08/19/HJ15-%E6%B1%82int%E7%B1%BB%E5%9E%8B%E6%AD%A3%E6%95%B4%E6%95%B0%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E5%AD%98%E5%82%A8%E6%97%B61%E7%9A%84%E4%B8%AA%E6%95%B0/</id>
    <published>2021-08-19T01:48:02.000Z</published>
    <updated>2021-08-19T02:01:40.657Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>二进制中1的个数，老入门题了。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>输入一个 <code>int</code> 型的正整数，计算出该 <code>int</code> 型数据在内存中存储时 $1$ 的个数。</p><p><strong>输入描述：</strong><br> 输入一个整数（<code>int</code> 类型）</p><p><strong>输出描述：</strong><br> 这个数转换成 $2$ 进制后，输出 $1$ 的个数</p><p><strong>示例1</strong></p><blockquote><p><strong>输入：</strong><br>5</p></blockquote><blockquote><p><strong>输出：</strong><br>2</p></blockquote><h3 id="lowbit"><a href="#lowbit" class="headerlink" title="lowbit"></a>lowbit</h3><p><code>lowbit</code> 返回二进制数中最低位的 $1$ 及后面的 $0$（所构成的数）。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-19 09:51:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int64_t</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int64_t</span> x)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; n; n -= lowbit(n)) &#123;</span><br><span class="line">        res++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-19 09:54:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">long</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; n != <span class="number">0</span>; n -= lowbit(n)) &#123;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/440f16e490a0404786865e99c6ad91c9?tpId=37&&tqId=21238&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ15. 求int类型正整数在内存中存储时1的个数</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;二进制中1的个数，老入门题了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="位运算" scheme="https://accepted.org.cn/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="lowbit" scheme="https://accepted.org.cn/tags/lowbit/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ14. 字符串排序</title>
    <link href="https://accepted.org.cn/2021/08/18/HJ14-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F/"/>
    <id>https://accepted.org.cn/2021/08/18/HJ14-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F/</id>
    <published>2021-08-18T14:41:37.000Z</published>
    <updated>2021-08-18T15:08:39.533Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>熟悉C++和Java的排序轮子。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>给定 $n$ 个字符串，请对 $n$ 个字符串按照字典序排列。</p><p><strong>输入描述：</strong><br>输入第一行为一个正整数 $n(1≤n≤1000)$,下面 $n$ 行为 $n$ 个字符串(字符串长度 $≤100$),字符串中只含有大小写字母。</p><p><strong>输出描述：</strong><br>数据输出 $n$ 行，输出结果为按照字典序排列的字符串。</p><p><strong>示例1</strong></p><blockquote><p><strong>输入：</strong><br>9<br>cap<br>to<br>cat<br>card<br>two<br>too<br>up<br>boat<br>boot</p></blockquote><blockquote><p><strong>输出：</strong><br>boat<br>boot<br>cap<br>card<br>cat<br>to<br>too<br>two<br>up</p></blockquote><h3 id="Sort"><a href="#Sort" class="headerlink" title="Sort"></a>Sort</h3><p>重点关注C++和Java的排序轮子使用。其实这些排序轮子都默认对字符串按照字典序排序。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 22:44:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; <span class="title">vec</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; vec[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;each : vec) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; each &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 23:05:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            String s = in.next();</span><br><span class="line">            list.add(s);</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        <span class="keyword">for</span> (String each : list) &#123;</span><br><span class="line">            System.out.println(each);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/5af18ba2eb45443aa91a11e848aa6723?tpId=37&&tqId=21237&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ14. 字符串排序</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;熟悉C++和Java的排序轮子。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ13. 句子逆序</title>
    <link href="https://accepted.org.cn/2021/08/18/HJ13-%E5%8F%A5%E5%AD%90%E9%80%86%E5%BA%8F/"/>
    <id>https://accepted.org.cn/2021/08/18/HJ13-%E5%8F%A5%E5%AD%90%E9%80%86%E5%BA%8F/</id>
    <published>2021-08-18T14:18:31.000Z</published>
    <updated>2021-08-18T14:36:21.126Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单栈的应用。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>将一个英文语句以单词为单位逆序排放。例如“I am a boy”，逆序排放后为“boy a am I”<br>所有单词之间用一个空格隔开，语句中除了英文字母外，不再包含其他字符</p><p><strong>输入描述：</strong><br>输入一个英文语句，每个单词用空格隔开。保证输入只包含空格和字母。</p><p><strong>输出描述：</strong><br>得到逆序的句子</p><p><strong>示例1</strong></p><blockquote><p><strong>输入：</strong><br>I am a boy</p></blockquote><blockquote><p><strong>输出：</strong><br>boy a am I</p></blockquote><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><p>注意Java语言中，<code>StringBuilder</code> 的清空有三种常见的方式。<br><code>StringBuilder sb = new StringBuilder();</code></p><ul><li><ol><li><code>sb.setLength(0);</code></li></ol></li><li><ol start="2"><li><code>sb.delete(0. sb.length());</code></li></ol></li><li><ol start="3"><li>生成新的StringBuilder对象，旧的由GC回收。</li></ol></li></ul><p>三种方法最快的是第一种，第二种次之（差别很小），最慢的是第三种。<br>另外注意第二种方式，第二个index指向 <code>StringBuilder</code> 最后一个字符下标的后一位。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021年08月18日22:20:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt; stk;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    s += <span class="string">' '</span>;</span><br><span class="line">    <span class="built_in">string</span> tmp = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">' '</span>) &#123;</span><br><span class="line">            stk.push(tmp);</span><br><span class="line">            tmp = <span class="string">""</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tmp += s[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (; !stk.empty(); stk.pop()) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; stk.top() &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 22:34:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.nextLine();</span><br><span class="line">        s += <span class="string">" "</span>;</span><br><span class="line">        LinkedList&lt;String&gt; stk = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chs[i] == <span class="string">' '</span>) &#123;</span><br><span class="line">                stk.addLast(sb.toString());</span><br><span class="line">                sb.setLength(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sb.append(chs[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (; !stk.isEmpty();) &#123;</span><br><span class="line">            System.out.print(stk.removeLast() + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/48b3cb4e3c694d9da5526e6255bb73c3?tpId=37&&tqId=21236&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ13. 句子逆序</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单栈的应用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="栈" scheme="https://accepted.org.cn/tags/%E6%A0%88/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ12. 字符串反转</title>
    <link href="https://accepted.org.cn/2021/08/18/HJ12-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC/"/>
    <id>https://accepted.org.cn/2021/08/18/HJ12-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E8%BD%AC/</id>
    <published>2021-08-18T10:20:09.000Z</published>
    <updated>2021-08-18T14:36:35.373Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单字符串反转，有大概一万种做法。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>接受一个只包含小写字母的字符串，然后输出该字符串反转后的字符串。（字符串长度不超过 $1000$）</p><p><strong>输入描述：</strong><br>输入一行，为一个只包含小写字母的字符串。</p><p><strong>输出描述：</strong><br>输出该字符串反转后的字符串。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>abcd</p></blockquote><blockquote><p>输出：<br>dcba</p></blockquote><h3 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h3><p>这题主要考察字符串反转，方法有一万种。选一种自己喜欢的就好。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 18:22:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    reverse(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 18:28:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.next();</span><br><span class="line">        System.out.println(<span class="keyword">new</span> StringBuilder(s).reverse().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/e45e078701ab4e4cb49393ae30f1bb04?tpId=37&&tqId=21235&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ12. 字符串反转</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单字符串反转，有大概一万种做法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ11. 数字颠倒</title>
    <link href="https://accepted.org.cn/2021/08/18/HJ11-%E6%95%B0%E5%AD%97%E9%A2%A0%E5%80%92/"/>
    <id>https://accepted.org.cn/2021/08/18/HJ11-%E6%95%B0%E5%AD%97%E9%A2%A0%E5%80%92/</id>
    <published>2021-08-18T09:51:33.000Z</published>
    <updated>2021-08-18T10:16:06.825Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>Integer to String reverse.</p><a id="more"></a><h3 id="反转整数"><a href="#反转整数" class="headerlink" title="反转整数"></a>反转整数</h3><p>将数字每一位to string，逆序保存。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-18 17:56:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">string</span> s = n ? <span class="string">""</span> : <span class="string">"0"</span>;</span><br><span class="line">    <span class="keyword">for</span> (; n; n /= <span class="number">10</span>) &#123;</span><br><span class="line">        s += n % <span class="number">10</span> + <span class="number">0x30</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021年08月18日18:13:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        StringBuilder sb = n == <span class="number">0</span> ? <span class="keyword">new</span> StringBuilder(<span class="string">"0"</span>) : <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (; n != <span class="number">0</span>; n /= <span class="number">10</span>) &#123;</span><br><span class="line">            sb.append((<span class="keyword">char</span>)(n % <span class="number">10</span> + <span class="number">0x30</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/ae809795fca34687a48b172186e3dafe?tpId=37&&tqId=21234&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ11. 数字颠倒</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;Integer to String reverse.&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>基于OIDC协议的jwt颁发与验证的底层实现</title>
    <link href="https://accepted.org.cn/2021/08/18/%E5%9F%BA%E4%BA%8EOIDC%E5%8D%8F%E8%AE%AE%E7%9A%84jwt%E9%A2%81%E5%8F%91%E4%B8%8E%E9%AA%8C%E8%AF%81%E7%9A%84%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/"/>
    <id>https://accepted.org.cn/2021/08/18/%E5%9F%BA%E4%BA%8EOIDC%E5%8D%8F%E8%AE%AE%E7%9A%84jwt%E9%A2%81%E5%8F%91%E4%B8%8E%E9%AA%8C%E8%AF%81%E7%9A%84%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-08-18T01:15:08.000Z</published>
    <updated>2021-08-18T10:19:38.783Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>第一次技术分享会。</p><a id="more"></a><h2 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT"></a>什么是JWT</h2><h2 id="jwt长什么样？"><a href="#jwt长什么样？" class="headerlink" title="jwt长什么样？"></a>jwt长什么样？</h2><p>这是咱们嘉宾登录页面签发的JWT：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJraWQiOiI2MGNjMWQ5Yi0wNTU2LTQxNjMtYTAwOS1mNTgxNmIwMzczZGMiLCJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJ6aGFuZ3lhbmciLCJhdWQiOiJmYjkxNzdhZC0xMTQ2LTQyYjgtODNhNy0yODNmNWVjMmE1YWUiLCJpc3MiOiJodHRwczpcL1wvbGluYW9uZWRldi5kaWdpdGFsZXhwby5jb20iLCJleHAiOjE2MjkxODk2MTQsIm5vbmNlIjoiMDQ4NTBGNzgxOTQwNDM5Nzg0Q0MzRDMzNkFFQ0I5QzUiLCJpYXQiOjE2MjkxODkzNTV9.XxT0haq4fOHO6QzPEHudd6Z4-F4oXkJLdut-xxUh7EGcKm5dLBvwHdvMci2IY6_LHIcUCKs4xQHRaj5GtgqDNvauGLF_Nb_BHjnuLwxLAasDhkzt3d4qEd_uz8Mb_6_AUm126tgYetxyMk7QlW2FC8M9Xm-<span class="number">2F</span>60c73Hie_PyOdjA07o1ij2p4UvIKLfEvpKlKHBp9jCUj-tgQAG_rPqAC7NKF60z-idHJ5ekMnhV2MsdTLSRKWxOPM0l6TjA0YPSJFoE8PtGxD-D8Zk2GDRLTa530C9cKMnhuy9ydYF5_Io3LggOYdDqePtueNBl7FNHVgjFq0YP56uZ3uvLM0lBwA</span><br></pre></td></tr></table></figure><p>简化版：<br><code>xxxxx.yyyyy.zzzzz</code></p><p>分为三个部分，中间用 <code>.</code> 隔开.</p><p>分别是：</p><ul><li>Header</li><li>Payload</li><li>Signature</li></ul><p>这三段都是经过Base64Url加密的字符串，它们紧凑而小巧，一旦登录的用户获得了服务端签发的jwt，那么它可以在随后的每次请求的时候将jwt放在header，url或者post body里面，用来高效验证登录信息，服务端只需要解密就可以得到用户信息，没必要反复查表，也避免了在内存中维护session。<br><strong>Header:</strong><br>分为类型和加密算法两个部分。比如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"alg"</span>: <span class="string">"HS256"</span>,</span><br><span class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="签发过程"><a href="#签发过程" class="headerlink" title="签发过程"></a>签发过程</h2><p>Jwt的签发首先需要根据header和payload生成一个JWSObject，再调用JWSObject的sign方法进行签发。</p><h3 id="使用RSA私钥生成一个JWSSigner对象"><a href="#使用RSA私钥生成一个JWSSigner对象" class="headerlink" title="使用RSA私钥生成一个JWSSigner对象"></a>使用RSA私钥生成一个JWSSigner对象</h3><p>签发的实现过程会使用到这个key。<br><code>RSAKey rsaKey = RSAKey.parse(OIDCConstants.RSA_PRIVATE_KEY);</code><br><code>JWSSigner signer = new RSASSASigner(rsaKey);</code></p><h3 id="配置Header"><a href="#配置Header" class="headerlink" title="配置Header"></a>配置Header</h3><p>会将加密算法种类和生成对象的类型封装在header中。<br>因为在解密token的时候会先参考header从而选择正确的解密方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JWSHeader jwsHeader = <span class="keyword">new</span> JWSHeader</span><br><span class="line">        .Builder(JWSAlgorithm.RS256)</span><br><span class="line">        .type(JOSEObjectType.JWT).keyID(keyId).build();</span><br></pre></td></tr></table></figure><h3 id="生成JWSObject-核心对象"><a href="#生成JWSObject-核心对象" class="headerlink" title="生成JWSObject(核心对象)"></a>生成JWSObject(核心对象)</h3><p>接下来根据OIDC协议将JWT所包含的信息封装在JWSObject对象中，OIDC协议中这部分的详细描述：</p><ul><li>iss = Issuer Identifier：必须。提供认证信息者的唯一标识。一般是一个https的url（不包含querystring和fragment部分）。</li><li>sub = Subject Identifier：必须。iss提供的EU的标识，在iss范围内唯一。它会被RP用来标识唯一的用户。最长为255个ASCII个字符。</li><li>aud = Audience(s)：必须。标识ID Token的受众。必须包含OAuth2的client_id。</li><li>exp = Expiration time：必须。过期时间，超过此时间的ID Token会作废不再被验证通过。</li><li>iat = Issued At Time：必须。JWT的构建的时间。</li><li>auth_time = AuthenticationTime：EU完成认证的时间。如果RP发送AuthN请求的时候携带max_age的参数，则此Claim是必须的。</li><li>nonce：RP发送请求的时候提供的随机字符串，用来减缓重放攻击，也可以来关联ID Token和RP本身的Session信息。</li><li>acr = Authentication Context Class Reference：可选。表示一个认证上下文引用值，可以用来标识认证上下文类。</li><li>amr = Authentication Methods References：可选。表示一组认证方法。</li><li>azp = Authorized party：可选。结合aud使用。只有在被认证的一方和受众（aud）不一致时才使用此值，一般情况下很少使用。</li></ul><p>具体的实现，是将上述参数封装在 <code>JWTClaimsSet</code> 这个静态类里面，<code>jwtClaimsSetBuilder</code> 是该静态类的内部类对象，用来设置封装这个过程。这些参数将会成为静态类的内部变量。<br>接着会将 <code>JWTClaimsSet</code> 转为一个JSON对象，<code>Payload</code> 相当于一个 <code>wapper</code> 包装器，这个 <code>new</code> 的过程底层基本上只是完成了一次 <code>this.json = json</code> 的过程。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">JWTClaimsSet jwtClaimsSet = jwtClaimsSetBuilder.issuer(jwtDomain.getIssuer())</span><br><span class="line">        .subject(jwtDomain.getSubject())</span><br><span class="line">        .audience(jwtDomain.getAudience())</span><br><span class="line">        .expirationTime(jwtDomain.getExpirationTime())</span><br><span class="line">        .issueTime(jwtDomain.getIssuedTime())</span><br><span class="line">        .build();</span><br><span class="line"></span><br><span class="line">Payload payload = <span class="keyword">new</span> Payload(jwtClaimsSet.toJSONObject());</span><br><span class="line">JWSObject jwsObject = <span class="keyword">new</span> JWSObject(jwsHeader, payload);</span><br></pre></td></tr></table></figure><p>接着会将header和payload封装成我们要的JWSObject类型。<br>我们重点关注一下JWSObject对象初始化的时候进行了哪些设置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JWSObject</span><span class="params">(JWSHeader header, Payload payload)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (header == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The JWS header must not be null"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.header = header;</span><br><span class="line">        <span class="keyword">if</span> (payload == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The payload must not be null"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.setPayload(payload);</span><br><span class="line">            <span class="keyword">this</span>.signingInputString = composeSigningInput(header.toBase64URL(), payload.toBase64URL());</span><br><span class="line">            <span class="keyword">this</span>.signature = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">this</span>.state = JWSObject.State.UNSIGNED;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>对header和payload判空，如果为空都会抛出异常。</li><li>把header和payload初始化到对象内部。</li><li>将header和payload用Base64URL进行编码再toString()。简单说就是将header和payload加密成一个字符串放在JWSObject内部。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Base64URL <span class="title">toBase64URL</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.parsedBase64URL == <span class="keyword">null</span> ? Base64URL.encode(<span class="keyword">this</span>.toString()) : <span class="keyword">this</span>.parsedBase64URL;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li><li>将签发状态设置成<code>UNSIGNED</code></li></ul></blockquote><p>下面重点关注sign()方法的底层实现。</p><h3 id="签发sign-方法的准备过程"><a href="#签发sign-方法的准备过程" class="headerlink" title="签发sign() 方法的准备过程"></a>签发<code>sign()</code> 方法的准备过程</h3><p>在初始化JWSObject对象之后，会调用JWSObject对象的 <code>sign()</code> 方法来签发生成一个Json Web Token.<br>下面我们来一起看一下 <code>sign()</code> 方法的底层是怎么实现的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">sign</span><span class="params">(JWSSigner signer)</span> <span class="keyword">throws</span> JOSEException </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ensureUnsignedState();</span><br><span class="line">    <span class="keyword">this</span>.ensureJWSSignerSupport(signer);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.signature = signer.sign(<span class="keyword">this</span>.getHeader(), <span class="keyword">this</span>.getSigningInput());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (JOSEException var3) &#123;</span><br><span class="line">        <span class="keyword">throw</span> var3;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception var4) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(var4.getMessage(), var4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.state = JWSObject.State.SIGNED;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>先确保“未签名”的状态，在初始化JWSObject对象的时候已经将状态初始化成了未签发状态。在签发之前，咱们必须确保状态是未签发的，否则抛出异常。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureUnsignedState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state != JWSObject.State.UNSIGNED) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"The JWS object must be in an unsigned state"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li><li><code>signer</code> 这个对象是调用 <code>sign()</code> 方法时传入的，<code>signer.supportedJWSAlgorithms()</code>方法会返回所有支持的RSA加密算法类型，维护在一个哈希集合容器中。如果之前设置的算法加密类型不在该容器中的话，则抛出异常。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureJWSSignerSupport</span><span class="params">(JWSSigner signer)</span> <span class="keyword">throws</span> JOSEException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!signer.supportedJWSAlgorithms().contains(<span class="keyword">this</span>.getHeader().getAlgorithm())) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(<span class="string">"The \""</span> + <span class="keyword">this</span>.getHeader().getAlgorithm() + <span class="string">"\" algorithm is not allowed or supported by the JWS signer: Supported algorithms: "</span> + signer.supportedJWSAlgorithms());</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li><li>在签发前的验证工作完成之后，最终调用 RSASSASigner 的sign()方法签发<br><code>this.signature = signer.sign(this.getHeader(), this.getSigningInput());</code></li></ul></blockquote><p>好，在深入 <code>sign()</code> 底层之前，我们先梳理一下整套逻辑，关注一下方法到底做了什么。<br><code>sign()</code> 方法会返回一个 <code>Base64URL</code> 对象并成为调用者对象（<code>JWSObject</code>）的一个内部对象。这是一个封装的过程。<br>也就是说，纵观整个签发过程，无非就是先生成一个 <code>JWSObject</code> 对象，封装了各种参数（用户信息，过期时间啥的），再将加密后的 <code>Base64URL</code> 再次封装。最后将 <code>JWSObject</code> 对象序列化成最终的 <code>JWT</code> 返回。</p><h3 id="RSASSASigner-signer-方法的底层实现（重点关注）"><a href="#RSASSASigner-signer-方法的底层实现（重点关注）" class="headerlink" title="RSASSASigner.signer()方法的底层实现（重点关注）"></a>RSASSASigner.signer()方法的底层实现（重点关注）</h3><p><code>RSASSASigner</code>（我称之为“签发器”）就是第一步用rsaKey生成的对象类型，回顾一下：<br><code>JWSSigner signer = new RSASSASigner(rsaKey);</code><br>显然 <code>JWSSigner</code> 是接口，而 <code>RSASSASigner</code> 是实现类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Base64URL <span class="title">sign</span><span class="params">(JWSHeader header, <span class="keyword">byte</span>[] signingInput)</span> <span class="keyword">throws</span> JOSEException </span>&#123;</span><br><span class="line">    Signature signer = RSASSA.getSignerAndVerifier(header.getAlgorithm(), <span class="keyword">this</span>.getJCAContext().getProvider());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        signer.initSign(<span class="keyword">this</span>.privateKey);</span><br><span class="line">        signer.update(signingInput);</span><br><span class="line">        <span class="keyword">return</span> Base64URL.encode(signer.sign());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InvalidKeyException var5) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(<span class="string">"Invalid private RSA key: "</span> + var5.getMessage(), var5);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SignatureException var6) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> JOSEException(<span class="string">"RSA signature exception: "</span> + var6.getMessage(), var6);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这三个方法是整个signer()的核心：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Initialize this object for signing. If this method is called again with a different argument, it negates the effect of this call.</span></span><br><span class="line"><span class="comment">Params:</span></span><br><span class="line"><span class="comment">privateKey – the private key of the identity whose signature is going to be generated.</span></span><br><span class="line"><span class="comment">Throws:</span></span><br><span class="line"><span class="comment">InvalidKeyException – if the key is invalid.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">initSign</span><span class="params">(PrivateKey privateKey)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> InvalidKeyException </span>&#123;</span><br><span class="line">        engineInitSign(privateKey);</span><br><span class="line">        state = SIGN;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!skipDebug &amp;&amp; pdebug != <span class="keyword">null</span>) &#123;</span><br><span class="line">            pdebug.println(<span class="string">"Signature."</span> + algorithm +</span><br><span class="line">                <span class="string">" signing algorithm from: "</span> + getProviderName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Updates the data to be signed or verified, using the specified array of bytes.</span></span><br><span class="line"><span class="comment">Params:</span></span><br><span class="line"><span class="comment">data – the byte array to use for the update.</span></span><br><span class="line"><span class="comment">Throws:</span></span><br><span class="line"><span class="comment">SignatureException – if this signature object is not initialized properly.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> SignatureException </span>&#123;</span><br><span class="line">        update(data, <span class="number">0</span>, data.length);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Returns the signature bytes of all the data updated. The format of the signature depends on the underlying signature scheme.</span></span><br><span class="line"><span class="comment">A call to this method resets this signature object to the state it was in when previously initialized for signing via a call to initSign(PrivateKey). That is, the object is reset and available to generate another signature from the same signer, if desired, via new calls to update and sign.</span></span><br><span class="line"><span class="comment">Returns:</span></span><br><span class="line"><span class="comment">the signature bytes of the signing operation's result.</span></span><br><span class="line"><span class="comment">Throws:</span></span><br><span class="line"><span class="comment">SignatureException – if this signature object is not initialized properly or if this signature algorithm is unable to process the input data provided.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] sign() <span class="keyword">throws</span> SignatureException &#123;</span><br><span class="line">        <span class="keyword">if</span> (state == SIGN) &#123;</span><br><span class="line">            <span class="keyword">return</span> engineSign();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SignatureException(<span class="string">"object not initialized for "</span> +</span><br><span class="line">                                     <span class="string">"signing"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">engineInitSign</span><span class="params">(PrivateKey var1)</span> <span class="keyword">throws</span> InvalidKeyException </span>&#123;</span><br><span class="line">    AsymmetricKeyParameter var2 = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (var1 <span class="keyword">instanceof</span> BCDSTU4145PrivateKey) &#123;</span><br><span class="line">        var2 = ECUtil.generatePrivateKeyParameter(var1);</span><br><span class="line">        <span class="keyword">this</span>.digest = <span class="keyword">new</span> GOST3411Digest(<span class="keyword">this</span>.expandSbox(DSTU4145Params.getDefaultDKE()));</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (var1 <span class="keyword">instanceof</span> ECKey) &#123;</span><br><span class="line">        var2 = ECUtil.generatePrivateKeyParameter(var1);</span><br><span class="line">        <span class="keyword">this</span>.digest = <span class="keyword">new</span> GOST3411Digest(<span class="keyword">this</span>.expandSbox(DSTU4145Params.getDefaultDKE()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.appRandom != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.signer.init(<span class="keyword">true</span>, <span class="keyword">new</span> ParametersWithRandom(var2, <span class="keyword">this</span>.appRandom));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.signer.init(<span class="keyword">true</span>, var2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重点关注engineSign()，这是签发的实现核心：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">byte</span>[] engineSign() <span class="keyword">throws</span> SignatureException &#123;</span><br><span class="line">    <span class="keyword">byte</span>[] var1 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="keyword">this</span>.digest.getDigestSize()];</span><br><span class="line">    <span class="keyword">this</span>.digest.doFinal(var1, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        BigInteger[] var2 = <span class="keyword">this</span>.signer.generateSignature(var1);</span><br><span class="line">        <span class="keyword">byte</span>[] var3 = var2[<span class="number">0</span>].toByteArray();</span><br><span class="line">        <span class="keyword">byte</span>[] var4 = var2[<span class="number">1</span>].toByteArray();</span><br><span class="line">        <span class="keyword">byte</span>[] var5 = <span class="keyword">new</span> <span class="keyword">byte</span>[var3.length &gt; var4.length ? var3.length * <span class="number">2</span> : var4.length * <span class="number">2</span>];</span><br><span class="line">        System.arraycopy(var4, <span class="number">0</span>, var5, var5.length / <span class="number">2</span> - var4.length, var4.length);</span><br><span class="line">        System.arraycopy(var3, <span class="number">0</span>, var5, var5.length - var3.length, var3.length);</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> DEROctetString(var5)).getEncoded();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception var6) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SignatureException(var6.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">byte</span>[] engineSign() <span class="keyword">throws</span> SignatureException &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.privateKey == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SignatureException(<span class="string">"Missing private key"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] var1 = <span class="keyword">this</span>.getDigestValue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] var2 = encodeSignature(<span class="keyword">this</span>.digestOID, var1);</span><br><span class="line">            <span class="keyword">byte</span>[] var3 = <span class="keyword">this</span>.padding.pad(var2);</span><br><span class="line">            <span class="keyword">byte</span>[] var4 = RSACore.rsa(var3, <span class="keyword">this</span>.privateKey, <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">return</span> var4;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (GeneralSecurityException var5) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SignatureException(<span class="string">"Could not sign data"</span>, var5);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var6) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SignatureException(<span class="string">"Could not encode data"</span>, var6);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">byte</span>[] engineSign() <span class="keyword">throws</span> SignatureException &#123;</span><br><span class="line">    <span class="keyword">byte</span>[] var1 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="keyword">this</span>.digest.getDigestSize()];</span><br><span class="line">    <span class="keyword">this</span>.digest.doFinal(var1, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] var2 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">64</span>];</span><br><span class="line">        BigInteger[] var3 = <span class="keyword">this</span>.signer.generateSignature(var1);</span><br><span class="line">        <span class="keyword">byte</span>[] var4 = var3[<span class="number">0</span>].toByteArray();</span><br><span class="line">        <span class="keyword">byte</span>[] var5 = var3[<span class="number">1</span>].toByteArray();</span><br><span class="line">        <span class="keyword">if</span> (var5[<span class="number">0</span>] != <span class="number">0</span>) &#123;</span><br><span class="line">            System.arraycopy(var5, <span class="number">0</span>, var2, <span class="number">32</span> - var5.length, var5.length);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.arraycopy(var5, <span class="number">1</span>, var2, <span class="number">32</span> - (var5.length - <span class="number">1</span>), var5.length - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (var4[<span class="number">0</span>] != <span class="number">0</span>) &#123;</span><br><span class="line">            System.arraycopy(var4, <span class="number">0</span>, var2, <span class="number">64</span> - var4.length, var4.length);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.arraycopy(var4, <span class="number">1</span>, var2, <span class="number">64</span> - (var4.length - <span class="number">1</span>), var4.length - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> var2;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception var6) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SignatureException(var6.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note primary">            <p><strong>原题链接：</strong> <a href=""></a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;第一次技术分享会。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="Java" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/Java/"/>
    
    
      <category term="Java" scheme="https://accepted.org.cn/tags/Java/"/>
    
      <category term="OIDC协议" scheme="https://accepted.org.cn/tags/OIDC%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>HJ10. 字符个数统计</title>
    <link href="https://accepted.org.cn/2021/08/17/HJ10-%E5%AD%97%E7%AC%A6%E4%B8%AA%E6%95%B0%E7%BB%9F%E8%AE%A1/"/>
    <id>https://accepted.org.cn/2021/08/17/HJ10-%E5%AD%97%E7%AC%A6%E4%B8%AA%E6%95%B0%E7%BB%9F%E8%AE%A1/</id>
    <published>2021-08-17T14:47:48.000Z</published>
    <updated>2021-08-17T15:31:02.346Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单哈希表的使用。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>编写一个函数，计算字符串中含有的不同字符的个数。字符在ASCII码范围内($0$~$127$，包括 $0$ 和 $127$)，换行表示结束符，不算在字符里。不在范围内的不作统计。多个相同的字符只计算一次<br>例如，对于字符串abaca而言，有a、b、c三种不同的字符，因此输出 $3$。</p><p><strong>输入描述：</strong><br>输入一行没有空格的字符串。</p><p><strong>输出描述：</strong><br>输出 输入字符串 中范围在($0$~$127$，包括 $0$ 和 $127$)字符的种数。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>abc</p></blockquote><blockquote><p>输出：<br>3</p></blockquote><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><p>很容易想到维护一个哈希表或者集合统计所有出现过的字符。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        st[s[i]] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; st.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.next();</span><br><span class="line">        Map&lt;Character, Boolean&gt; hash = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = chs.length; i &lt; n; i++) &#123;</span><br><span class="line">            hash.put(chs[i], <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(hash.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><h3 id="bitset"><a href="#bitset" class="headerlink" title="bitset"></a>bitset</h3><p>当然也可以使用bitset记录所有出现过的字符。</p><div class="tabs" id="g_tab1"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab1-1">C++</a></li><li class="tab"><a href="#g_tab1-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab1-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-17 23:15:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="built_in">bitset</span>&lt;130&gt; bs;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">        bs[s[i]] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; bs.count() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab1-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-17 23:13:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.next();</span><br><span class="line">        BitSet bitset = <span class="keyword">new</span> BitSet(<span class="number">130</span>);</span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = chs.length; i &lt; n; i++) &#123;</span><br><span class="line">            bitset.set(chs[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(bitset.cardinality());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/eb94f6a5b2ba49c6ac72d40b5ce95f50?tpId=37&&tqId=21233&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ10. 字符个数统计</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单哈希表的使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="哈希表" scheme="https://accepted.org.cn/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
      <category term="bitset" scheme="https://accepted.org.cn/tags/bitset/"/>
    
  </entry>
  
  <entry>
    <title>HJ9. 提取不重复的整数</title>
    <link href="https://accepted.org.cn/2021/08/16/HJ9-%E6%8F%90%E5%8F%96%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B4%E6%95%B0/"/>
    <id>https://accepted.org.cn/2021/08/16/HJ9-%E6%8F%90%E5%8F%96%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B4%E6%95%B0/</id>
    <published>2021-08-16T14:40:16.000Z</published>
    <updated>2021-08-17T14:30:48.423Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>TwoSum既视感[滑稽]</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>输入一个 <code>int</code> 型整数，按照从右向左的阅读顺序，返回一个不含重复数字的新的整数。<br>保证输入的整数最后一位不是 $0$。</p><p><strong>输入描述：</strong><br>输入一个 <code>int</code> 型整数</p><p><strong>输出描述：</strong><br>按照从右向左的阅读顺序，返回一个不含重复数字的新的整数</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>9876673</p></blockquote><blockquote><p>输出：<br>37689</p></blockquote><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021年08月16日22:43:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (; n; n /= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = n % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (!st[x]) <span class="built_in">cout</span> &lt;&lt; x;</span><br><span class="line">        st[x] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-16 22:48:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        n = in.nextInt();</span><br><span class="line">        Map&lt;Integer, Boolean&gt; st = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (; n != <span class="number">0</span>; n /= <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = n % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span> (!st.containsKey(x)) &#123;</span><br><span class="line">                System.out.print(x);</span><br><span class="line">            &#125;</span><br><span class="line">            st.put(x, <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/253986e66d114d378ae8de2e6c4577c1?tpId=37&&tqId=21232&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ9. 提取不重复的整数</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;TwoSum既视感[滑稽]&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="哈希表" scheme="https://accepted.org.cn/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ8. 合并表记录</title>
    <link href="https://accepted.org.cn/2021/08/16/HJ8-%E5%90%88%E5%B9%B6%E8%A1%A8%E8%AE%B0%E5%BD%95/"/>
    <id>https://accepted.org.cn/2021/08/16/HJ8-%E5%90%88%E5%B9%B6%E8%A1%A8%E8%AE%B0%E5%BD%95/</id>
    <published>2021-08-16T14:01:34.000Z</published>
    <updated>2021-08-16T14:31:25.189Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>有序哈希表的应用。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>数据表记录包含表索引和数值（ <code>int</code> 范围的正整数），请对表索引相同的记录进行合并，即将相同索引的数值进行求和运算，输出按照 <code>key</code> 值升序进行输出。</p><p><strong>输入描述：</strong><br>先输入键值对的个数<br>然后输入成对的 <code>index</code> 和 <code>value</code> 值，以空格隔开</p><p><strong>输出描述：</strong><br>输出合并后的键值对（多行）</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>4<br>0 1<br>0 2<br>1 2<br>3 4</p></blockquote><blockquote><p>输出：<br>0 3<br>1 2<br>3 4</p></blockquote><h3 id="有序哈希表"><a href="#有序哈希表" class="headerlink" title="有序哈希表"></a>有序哈希表</h3><p>将数据放到哈希表中，再将 <code>key</code> 相同的 <code>value</code> 累加即可。同时，题目要求按照 <code>key</code> 升序排列。所以可以考虑使用有序哈希表。<br>在C++中是STL的 <code>Map</code>，在Java中则是 <code>TreeMap</code>。</p><p>注意在Java中 <code>Map.Entry&lt;K, V&gt;</code> 是Map的静态接口。遍历的时候用到。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-16 22:06:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; hash;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (; n--;) &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        hash[x] += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [key, value] : hash) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; key &lt;&lt; <span class="string">' '</span> &lt;&lt; value &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-16 22:30:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        Map&lt;Integer, Integer&gt; hash = <span class="keyword">new</span> TreeMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = in.nextInt();</span><br><span class="line">            <span class="keyword">int</span> y = in.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (hash.containsKey(x)) &#123;</span><br><span class="line">                hash.put(x, hash.get(x) + y);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                hash.put(x, y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, Integer&gt; entry : hash.entrySet()) &#123;</span><br><span class="line">            System.out.println(entry.getKey() + <span class="string">" "</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/de044e89123f4a7482bd2b214a685201?tpId=37&&tqId=21231&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ8. 合并表记录</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;有序哈希表的应用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="哈希表" scheme="https://accepted.org.cn/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ7. 取近似值</title>
    <link href="https://accepted.org.cn/2021/08/15/HJ7-%E5%8F%96%E8%BF%91%E4%BC%BC%E5%80%BC/"/>
    <id>https://accepted.org.cn/2021/08/15/HJ7-%E5%8F%96%E8%BF%91%E4%BC%BC%E5%80%BC/</id>
    <published>2021-08-15T09:03:52.000Z</published>
    <updated>2021-08-15T10:28:19.597Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>注意C++和Java强转整型的区别。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>写出一个程序，接受一个正浮点数值，输出该数值的近似整数值。如果小数点后数值大于等于5,向上取整；小于5，则向下取整。</p><p><strong>输入描述：</strong><br>输入一个正浮点数值</p><p><strong>输出描述：</strong><br>输出该数值的近似整数值</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>5.5</p></blockquote><blockquote><p>输出：<br>6</p></blockquote><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><p>本题主要关注一下C++和Java在float转整型时的区别、<br><code>float x = 5.0;</code><br>在C++中，<code>int y = x * 10;</code> 即可，或者 <code>int y = (int)x * 10;</code>，在一个变量上强转一次，整个表达式都默认强转。<br>而在Java中，<code>int y = x * 10;</code>是错的，应该 <code>int y = (int)(x * 10);</code> 整个表达式放在一起强转。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-15 17:06:09</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> x;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; x;) &#123;</span><br><span class="line">        <span class="keyword">int</span> y = x * <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> base = y / <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> remain = y % <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (remain &lt; <span class="number">5</span> ? base : base + <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-15 17:05:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            <span class="keyword">float</span> x = in.nextFloat();</span><br><span class="line">            <span class="keyword">int</span> y = (<span class="keyword">int</span>)(x * <span class="number">10</span>);</span><br><span class="line">            <span class="keyword">int</span> base = y / <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> remain = y % <span class="number">10</span>;</span><br><span class="line">            System.out.println(remain &lt; <span class="number">5</span> ? base : base + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/3ab09737afb645cc82c35d56a5ce802a?tpId=37&&tqId=21230&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ7. 取近似值</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;注意C++和Java强转整型的区别。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ6. 质数因子</title>
    <link href="https://accepted.org.cn/2021/08/15/HJ6-%E8%B4%A8%E6%95%B0%E5%9B%A0%E5%AD%90/"/>
    <id>https://accepted.org.cn/2021/08/15/HJ6-%E8%B4%A8%E6%95%B0%E5%9B%A0%E5%AD%90/</id>
    <published>2021-08-15T06:48:53.000Z</published>
    <updated>2021-08-15T08:44:24.753Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>对一个正整数分解质因数。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>功能:输入一个正整数，按照从小到大的顺序输出它的所有质因子（重复的也要列举）（如 $180$ 的质因子为 $2$ $2$ $3$ $3$ $5$ ）</p><p>最后一个数后面也要有空格</p><p><strong>输入描述：</strong><br>输入一个long型整数</p><p><strong>输出描述：</strong><br>按照从小到大的顺序输出它的所有质数的因子，以空格隔开。最后一个数后面也要有空格。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>180</p></blockquote><blockquote><p>输出：<br>2 2 3 3 5</p></blockquote><h3 id="最小质因子和最大质因子-埃式筛优化"><a href="#最小质因子和最大质因子-埃式筛优化" class="headerlink" title="最小质因子和最大质因子+埃式筛优化"></a>最小质因子和最大质因子+埃式筛优化</h3><p>一个显然的思路是，对于一个数，找到它的最小质因子，然后将这个数更新成对该最小质因子整除后的数，依次再去找到其最小质因子。<br>可以从2开始试，如果一个数会被2整除，这个数除2之后也可以被2整除，直到结束。那么这个数的质因子就全是2.<br>如果在中间某处不能被2整除了，说明这个数往后更新的时候均不可被2整除。这时候尝试可否整除3.<br>按照这个方法直到找到所有最小质因子。</p><p>现在考虑如何优化。</p><p>优化一：<br>首先看下最大质因子性质：<br><strong>一个正整数的质因子，最多只有一个大于其平方根。</strong><br>证明：假设有超过一个质因子大于其平方根，那么二者相乘一定大于该数。得证。</p><p>对于目标数字 $x$，根据这个性质，我们可以将可能出现的质因子限制在 $\sqrt x$及以内。再考虑剩余可能的最后一个大于 $\sqrt x$的质因子。</p><p>优化二：<br>因为求的是所有质因子，那么在找到每个质因子之后，我们都可以借助 <a href="/2020/12/03/【AcWing算法基础】第四讲-数学知识-质数-AcWing-868-筛质数/">筛质数</a> 思想，将一部分非质数筛掉，在剩下的中找目标质因子。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-15 16:01:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">long</span>, <span class="keyword">bool</span>&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">long</span> &amp;n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> i = <span class="number">2L</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= (<span class="keyword">long</span>)<span class="built_in">sqrt</span>(n); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (; !st[i] &amp;&amp; n % i == <span class="number">0</span>;) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            n /= i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更新一次即可</span></span><br><span class="line">        <span class="keyword">bool</span> is_set = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (!is_set) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">long</span> j = i + i; j &lt;= (<span class="keyword">long</span>)<span class="built_in">sqrt</span>(n); j += i)</span><br><span class="line">                st[j] = <span class="literal">true</span>;</span><br><span class="line">            is_set = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 此时存在最大质因子超过原数字平方根的可能</span></span><br><span class="line">    <span class="keyword">if</span> (n != <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; n &lt;&lt; <span class="string">' '</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">long</span> n;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; n;)</span><br><span class="line">        solve(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-15 16:44:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            <span class="keyword">long</span> x = in.nextLong();</span><br><span class="line">            Map&lt;Long, Boolean&gt; hash = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">long</span> i = <span class="number">2</span>; i &lt;= (<span class="keyword">long</span>)Math.sqrt(x); i++) &#123;</span><br><span class="line">                <span class="keyword">boolean</span> isSet = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">for</span> (;(hash.get(i) == <span class="keyword">null</span> || hash.get(i) == <span class="keyword">false</span>) &amp;&amp; x % i == <span class="number">0</span>;) &#123;</span><br><span class="line">                    System.out.print(i + <span class="string">" "</span>);</span><br><span class="line">                    x /= i;</span><br><span class="line">                    <span class="keyword">if</span> (!isSet) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">long</span> j = i + i; j &lt;= (<span class="keyword">long</span>)Math.sqrt(x); j += i) &#123;</span><br><span class="line">                            hash.put(j, <span class="keyword">true</span>);</span><br><span class="line">                        &#125;    </span><br><span class="line">                        isSet = <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (x != <span class="number">1</span>) System.out.print(x + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/196534628ca6490ebce2e336b47b3607?tpId=37&&tqId=21229&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ6. 质数因子</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;对一个正整数分解质因数。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数论" scheme="https://accepted.org.cn/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="质数" scheme="https://accepted.org.cn/tags/%E8%B4%A8%E6%95%B0/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ5. 进制转换</title>
    <link href="https://accepted.org.cn/2021/08/15/HJ5-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    <id>https://accepted.org.cn/2021/08/15/HJ5-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</id>
    <published>2021-08-14T17:56:57.000Z</published>
    <updated>2021-08-14T18:23:20.365Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>一个简单的十六进制转十进制问题。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>写出一个程序，接受一个十六进制的数，输出该数值的十进制表示。</p><p><strong>输入描述：</strong><br>输入一个十六进制的数值字符串。注意：一个用例会同时有多组输入数据，请参考帖子<a href="https://www.nowcoder.com/discuss/276处理多组输入的问题。" target="_blank" rel="noopener">https://www.nowcoder.com/discuss/276处理多组输入的问题。</a></p><p><strong>输出描述：</strong><br>输出该数值的十进制字符串。不同组的测试用例用\n隔开。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>0xA<br>0xAA</p></blockquote><blockquote><p>输出：<br>10<br>170</p></blockquote><h3 id="十六进制转十进制"><a href="#十六进制转十进制" class="headerlink" title="十六进制转十进制"></a>十六进制转十进制</h3><p>任意进制(设 $M$ 进制)转十进制：<br>先将 $M$ 种符号和对应的十进制一一对应起来。<br>答案初始化为零。<br>对于每一位 $M$ 进制符号，答案乘以 $M$ 再加上该位符号对应的十进制数。答案更新为上述值。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li><li class="tab"><a href="#g_tab0-3">Java JDK</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author:etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-15 02:00:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; hashmap = &#123;&#123;<span class="string">'A'</span>, <span class="number">10</span>&#125;, &#123;<span class="string">'B'</span>, <span class="number">11</span>&#125;,</span><br><span class="line">                                 &#123;<span class="string">'C'</span>, <span class="number">12</span>&#125;, &#123;<span class="string">'D'</span>, <span class="number">13</span>&#125;,</span><br><span class="line">                                 &#123;<span class="string">'E'</span>, <span class="number">14</span>&#125;, &#123;<span class="string">'F'</span>, <span class="number">15</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (; getline(<span class="built_in">cin</span>, s); ) &#123;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> c = s[i];</span><br><span class="line">            <span class="keyword">int</span> x = <span class="built_in">isdigit</span>(c) ? c - <span class="string">'0'</span> : hashmap[c];</span><br><span class="line">            res = res * <span class="number">16</span> + x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-15 02:18:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Character, Integer&gt; hash = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        hash.put(<span class="string">'A'</span>, <span class="number">10</span>);</span><br><span class="line">        hash.put(<span class="string">'B'</span>, <span class="number">11</span>);</span><br><span class="line">        hash.put(<span class="string">'C'</span>, <span class="number">12</span>);</span><br><span class="line">        hash.put(<span class="string">'D'</span>, <span class="number">13</span>);</span><br><span class="line">        hash.put(<span class="string">'E'</span>, <span class="number">14</span>);</span><br><span class="line">        hash.put(<span class="string">'F'</span>, <span class="number">15</span>);</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();) &#123;</span><br><span class="line">            String s = in.next();</span><br><span class="line">            <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">            <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>, n = s.length(); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">char</span> c = chs[i];</span><br><span class="line">                <span class="keyword">int</span> x = Character.isDigit(c) ? c - <span class="string">'0'</span> : hash.get(c);</span><br><span class="line">                res = res * <span class="number">16</span> + x;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-3"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author:atoa</span></span><br><span class="line"><span class="comment"> * 2021-08-15 02:23:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext(); ) &#123;</span><br><span class="line">            String s = in.next();</span><br><span class="line">            System.out.println(Integer.valueOf(s.substring(<span class="number">2</span>), <span class="number">16</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/8f3df50d2b9043208c5eed283d1d4da6?tpId=37&&tqId=21228&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ5. 进制转换</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;一个简单的十六进制转十进制问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="进制转换" scheme="https://accepted.org.cn/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ4. 字符串分隔</title>
    <link href="https://accepted.org.cn/2021/08/14/HJ4-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E9%9A%94/"/>
    <id>https://accepted.org.cn/2021/08/14/HJ4-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E9%9A%94/</id>
    <published>2021-08-14T13:16:26.000Z</published>
    <updated>2021-08-14T13:49:27.809Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单字符串分割题目。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong></p><ul><li>连续输入字符串，请按长度为 $8$ 拆分每个字符串后输出到新的字符串数组；</li><li>长度不是 $8$ 整数倍的字符串请在后面补数字 $0$，空字符串不处理。</li></ul><p><strong>输入描述：</strong><br>连续输入字符串(输入多次,每个字符串长度小于 $100$)</p><p><strong>输出描述：</strong><br>输出到长度为 $8$ 的新字符串数组</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>abc<br>123456789</p></blockquote><blockquote><p>输出：<br>abc00000<br>12345678<br>90000000</p></blockquote><h3 id="模拟"><a href="#模拟" class="headerlink" title="模拟"></a>模拟</h3><p>主要考察截取子串的方法，在C++的STL和Java的JDK中，字符串截取子串均有相应实现。<br>详情请见：<a href="https://eetoa.github.io/2021/06/11/算法竞赛常用STL和其他c-知识点总结/" target="_blank" rel="noopener">算法竞赛常用STL和其他c++知识点总结</a></p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-14 21:19:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (; getline(<span class="built_in">cin</span>, s);) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.<span class="built_in">size</span>(); i &lt; n; i = i + <span class="number">8</span>) &#123;</span><br><span class="line">            <span class="built_in">string</span> each = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">8</span> &lt; n) &#123;</span><br><span class="line">                each = s.substr(i, <span class="number">8</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                each = s.substr(i);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">8</span> - each.<span class="built_in">size</span>(); k--; each += <span class="string">'0'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; each &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-14 21:39:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext(); ) &#123;</span><br><span class="line">            String s = in.nextLine();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = s.length(); i &lt; n; i += <span class="number">8</span>) &#123;</span><br><span class="line">                <span class="comment">// StringBuilder sb = new StringBuilder();</span></span><br><span class="line">                String t;</span><br><span class="line">                <span class="keyword">if</span> (i + <span class="number">8</span> &lt; n) &#123;</span><br><span class="line">                    t = s.substring(i, i + <span class="number">8</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    t = s.substring(i, n);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>, len = t.length(); j &lt; <span class="number">8</span> - len; j++) &#123;</span><br><span class="line">                        t += <span class="string">'0'</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(t);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/d9162298cb5a437aad722fccccaae8a7?tpId=37&&tqId=21227&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ4. 字符串分隔</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单字符串分割题目。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ3. 明明的随机数</title>
    <link href="https://accepted.org.cn/2021/08/14/HJ3-%E6%98%8E%E6%98%8E%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
    <id>https://accepted.org.cn/2021/08/14/HJ3-%E6%98%8E%E6%98%8E%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/</id>
    <published>2021-08-14T11:51:56.000Z</published>
    <updated>2021-08-14T13:52:42.949Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>简单的排序+去重。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了 $N$ 个 $1$ 到 $1000$ 之间的随机整数（$N≤1000$），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作(同一个测试用例里可能会有多组数据(用于不同的调查)，希望大家能正确处理)。</p><p>注：测试用例保证输入参数的正确性，答题者无需验证。测试用例不止一组。</p><p>当没有新的输入时，说明输入结束。</p><p><strong>输入描述：</strong><br>注意：输入可能有多组数据(用于不同的调查)。每组数据都包括多行，第一行先输入随机整数的个数N，接下来的N行再输入相应个数的整数。具体格式请看下面的”示例”。</p><p><strong>输出描述：</strong><br>返回多行，处理后的结果</p><p><strong>示例1</strong></p><blockquote><p><strong>输入：</strong><br>3<br>2<br>2<br>1<br>11<br>10<br>20<br>40<br>32<br>67<br>40<br>20<br>89<br>300<br>400<br>15<br><strong>输出：</strong><br>1<br>2<br>10<br>15<br>20<br>32<br>40<br>67<br>89<br>300<br>400<br><strong>说明：</strong><br>输入解释：<br>第一个数字是 $3$，也即这个小样例的 $N=3$，说明用计算机生成了 $3$ 个 $1$ 到 $1000$ 之间的随机整数，接下来每行一个随机数字，共 $3$ 行，也即这 $3$ 个随机数字为：</p><p>2<br>1<br>1<br>所以第一个小样例的输出为：<br>1<br>2<br>第二个小样例的第一个数字为 $11$，也即…(类似上面的解释)…<br>所以第二个小样例的输出为：<br>10<br>15<br>20<br>32<br>40<br>67<br>89<br>300<br>400<br>所以示例1包含了两个小样例！！  </p></blockquote><h3 id="排序去重"><a href="#排序去重" class="headerlink" title="排序去重"></a>排序去重</h3><p>本题考察排序去重，C++可以完全依赖STL，C++和Java都可以使用有序集合。<br>手动去重也是可以的。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++ 纯STL</a></li><li class="tab"><a href="#g_tab0-2">Java Arrays类排序+手动去重</a></li><li class="tab"><a href="#g_tab0-3">Java 有序集合</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-14 19:57:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="built_in">cin</span> &gt;&gt; n; ) &#123;</span><br><span class="line">        <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        sort(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">        a.erase(unique(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>()), a.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;each : a) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; each &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-14 20:22:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();)  &#123;</span><br><span class="line">            <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">            <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                a[i] = in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">            Arrays.sort(a);</span><br><span class="line">            List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="comment">// dedupe</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                list.add(a[i]);</span><br><span class="line">                <span class="keyword">int</span> j = i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (; j &lt; n &amp;&amp; a[j] == a[i]; ++j);</span><br><span class="line">                i = j - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (Integer each : list) &#123;</span><br><span class="line">                System.out.println(each);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-3"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-14 20:45:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext();)  &#123;</span><br><span class="line">            <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">            Set&lt;Integer&gt; ordSet = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                ordSet.add(in.nextInt());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (Iterator iter = ordSet.iterator(); iter.hasNext();) &#123;</span><br><span class="line">                System.out.println(iter.next());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/3245215fffb84b7b81285493eae92ff0?tpId=37&&tqId=21226&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ3. 明明的随机数</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;简单的排序+去重。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="排序" scheme="https://accepted.org.cn/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ2. 计算某字母出现次数</title>
    <link href="https://accepted.org.cn/2021/08/14/HJ2-%E8%AE%A1%E7%AE%97%E6%9F%90%E5%AD%97%E6%AF%8D%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0/"/>
    <id>https://accepted.org.cn/2021/08/14/HJ2-%E8%AE%A1%E7%AE%97%E6%9F%90%E5%AD%97%E6%AF%8D%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0/</id>
    <published>2021-08-14T04:47:56.000Z</published>
    <updated>2021-08-14T13:53:37.973Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>入门题，字符计数。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>写出一个程序，接受一个由字母、数字和空格组成的字符串，和一个字母，然后输出输入字符串中该字母的出现次数。不区分大小写，字符串长度小于500。</p><p><strong>输入描述：</strong><br>第一行输入一个由字母和数字以及空格组成的字符串，第二行输入一个字母。</p><p><strong>输出描述：</strong><br>输出输入字符串中含有该字符的个数。</p><p><strong>示例1</strong></p><blockquote><p>输入：<br>ABCabc<br>A<br>输出：<br>2</p></blockquote><h3 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h3><p>简单的计数问题，也没啥好说的。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-14 12:51:09</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line">    <span class="keyword">char</span> cc = <span class="built_in">islower</span>(c) ? <span class="built_in">toupper</span>(c) : <span class="built_in">tolower</span>(c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;each : s) &#123;</span><br><span class="line">        <span class="keyword">if</span> (each == c || each == cc) res++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-14 13:03:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = in.nextLine();</span><br><span class="line">        <span class="keyword">char</span> c = in.next().charAt(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">char</span> cc = Character.isLowerCase(c) ? Character.toUpperCase(c) : Character.toLowerCase(c);</span><br><span class="line">        <span class="keyword">char</span>[] ar = s.toCharArray();</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> each : ar) &#123;</span><br><span class="line">            <span class="keyword">if</span> (each == c || each == cc) &#123;</span><br><span class="line">                res ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/a35ce98431874e3a820dbe4b2d0508b1?tpId=37&&tqId=21225&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ2. 计算某字母出现次数</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;入门题，字符计数。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HJ1. 字符串最后一个单词的长度</title>
    <link href="https://accepted.org.cn/2021/08/14/HJ1-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6/"/>
    <id>https://accepted.org.cn/2021/08/14/HJ1-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6/</id>
    <published>2021-08-14T03:48:52.000Z</published>
    <updated>2021-08-14T13:53:14.963Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>一道简单的字符串题目。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><strong>描述</strong><br>计算字符串最后一个单词的长度，单词以空格隔开，字符串长度小于5000。</p><p><strong>输入描述：</strong><br>输入一行，代表要计算的字符串，非空，长度小于5000。</p><p><strong>输出描述：</strong><br>输出一个整数，表示输入字符串最后一个单词的长度。</p><p><strong>示例1</strong></p><blockquote><p>输入：hello nowcoder<br>输出：8<br>说明：最后一个单词为nowcoder，长度为8</p></blockquote><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>这题没啥好说的，拿到最后一个字符串，计算长度即可。</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="built_in">string</span> &amp;s)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = s.<span class="built_in">size</span>(), res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] != <span class="string">' '</span>) res++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">for</span> (; getline(<span class="built_in">cin</span>, s);) &#123;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; s &lt;&lt; endl;</span></span><br><span class="line">        solve(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * author: etoa</span></span><br><span class="line"><span class="comment"> * 2021-08-14 11:56:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> N = <span class="number">5010</span>;</span><br><span class="line">    <span class="keyword">static</span> String[] stk = <span class="keyword">new</span> String[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> tt = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">for</span> (; in.hasNext(); stk[++tt] = in.next());</span><br><span class="line">        System.out.println(stk[tt].length());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.nowcoder.com/practice/8c949ea5f36f422594b306a2300315da?tpId=37&&tqId=21224&rp=1&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">HJ1. 字符串最后一个单词的长度</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;一道简单的字符串题目。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/NowCoder/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="https://accepted.org.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="NowCoder" scheme="https://accepted.org.cn/tags/NowCoder/"/>
    
      <category term="华为机试题库" scheme="https://accepted.org.cn/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95%E9%A2%98%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>我的职场生活笔记</title>
    <link href="https://accepted.org.cn/2021/08/11/%E6%88%91%E7%9A%84%E8%81%8C%E5%9C%BA%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/"/>
    <id>https://accepted.org.cn/2021/08/11/%E6%88%91%E7%9A%84%E8%81%8C%E5%9C%BA%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/</id>
    <published>2021-08-11T12:30:07.000Z</published>
    <updated>2021-08-11T13:10:26.846Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>职场生活也是一本书，既然读书，就得记笔记。</p><a id="more"></a><h3 id="真诚、亲切、友善"><a href="#真诚、亲切、友善" class="headerlink" title="真诚、亲切、友善"></a>真诚、亲切、友善</h3><p>和朋友，同学一样，同事之间也保持真诚、亲切和友善。</p><h3 id="工作之外，尽量不要提问"><a href="#工作之外，尽量不要提问" class="headerlink" title="工作之外，尽量不要提问"></a>工作之外，尽量不要提问</h3><p>工作之内的提问，属于工作范畴，提问普遍存在，但是注意提问的方式。<br>工作之外的提问，要尽量避免，有时候我会习惯性地提问，这是不对的，因为回答问题，特别是没营养本不该成为问题的问题，很无聊。</p><h3 id="不要涉及个人隐私"><a href="#不要涉及个人隐私" class="headerlink" title="不要涉及个人隐私"></a>不要涉及个人隐私</h3><p>不解释了，这是禁区。同事之间，除了工作，可以聊一些轻松地话题。</p><h3 id="不要议论别人"><a href="#不要议论别人" class="headerlink" title="不要议论别人"></a>不要议论别人</h3><p>好的不好的都避免。</p><p>…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;职场生活也是一本书，既然读书，就得记笔记。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="https://accepted.org.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="https://accepted.org.cn/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>【AcWing算法基础】第二讲-数据结构-栈 AcWing 3302. 表达式求值</title>
    <link href="https://accepted.org.cn/2021/08/10/%E3%80%90AcWing%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E3%80%91%E7%AC%AC%E4%BA%8C%E8%AE%B2-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%88-AcWing-3302-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/"/>
    <id>https://accepted.org.cn/2021/08/10/%E3%80%90AcWing%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E3%80%91%E7%AC%AC%E4%BA%8C%E8%AE%B2-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%88-AcWing-3302-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</id>
    <published>2021-08-10T13:38:00.000Z</published>
    <updated>2021-08-14T15:08:29.016Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>一道表达式求值问题，可以使用非递归的栈解法。</p><a id="more"></a><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>定一个表达式，其中运算符仅包含 $+,-, \times,/$（加 减 乘 整除），可能包含括号，请你求出表达式的最终值。</p><p><strong>注意：</strong></p><ul><li>数据保证给定的表达式合法。</li><li>题目保证符号 - 只作为减号出现，不会作为负号出现，例如，$-1+2$, $(2+2) \times (-(1+1)+2)$ 之类表达式均不会出现。</li><li>题目保证表达式中所有数字均为正整数。</li><li>题目保证表达式在中间计算过程以及结果中，均不超过 $231−1$。</li><li>题目中的整除是指向 $0$ 取整，也就是说对于大于 $0$ 的结果向下取整，例如 $5/3=1$，对于小于 $0$ 的结果向上取整，例如 $5/(1−4)=−1$。</li><li>C++和Java中的整除默认是向零取整；Python中的整除 <code>//</code> 默认向下取整，因此Python的 <code>eval()</code> 函数中的整除也是向下取整，在本题中不能直接使用。</li></ul><p><strong>输入格式</strong><br>共一行，为给定表达式。</p><p><strong>输出格式</strong><br>共一行，为表达式的结果。</p><p><strong>数据范围</strong><br>表达式的长度不超过 105。</p><p><strong>输入样例：</strong></p><blockquote><p>$(2+2) \times (1+1)$</p></blockquote><p><strong>输出样例：</strong></p><blockquote><p>8</p></blockquote><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><p>我们维护两个栈，一个放操作符号，另一个放数字。<br>原则是这样：</p><div class="tabs" id="g_tab0"><ul class="nav-tabs"><li class="tab active"><a href="#g_tab0-1">C++</a></li><li class="tab"><a href="#g_tab0-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="g_tab0-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; nums;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; ops;</span><br><span class="line"></span><br><span class="line"><span class="built_in">unordered_map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; pr = &#123;&#123;<span class="string">'+'</span>, <span class="number">1</span>&#125;, &#123;<span class="string">'-'</span>, <span class="number">1</span>&#125;, &#123;<span class="string">'*'</span>, <span class="number">2</span>&#125;, &#123;<span class="string">'/'</span>, <span class="number">2</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">eval</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b = nums.top(); nums.pop(); <span class="comment">// the top of stk should be the secondary number</span></span><br><span class="line">    <span class="keyword">int</span> a = nums.top(); nums.pop();</span><br><span class="line">    <span class="keyword">char</span> op = ops.top(); ops.pop();</span><br><span class="line">    <span class="keyword">int</span> res;</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="string">'+'</span>) res = a + b;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">'-'</span>) res = a - b;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">'*'</span>) res = a * b;</span><br><span class="line">    <span class="keyword">else</span> res = a / b;</span><br><span class="line">    nums.push(res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="literal">nullptr</span>)-&gt;sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="keyword">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> c = s[i];</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c)) &#123;</span><br><span class="line">            <span class="keyword">int</span> j = i;</span><br><span class="line">            <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (; j &lt; n &amp;&amp; <span class="built_in">isdigit</span>(s[j]); j++) &#123;</span><br><span class="line">                x = x * <span class="number">10</span> + (s[j] - <span class="string">'0'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            i = j - <span class="number">1</span>;  <span class="comment">// because i++ later</span></span><br><span class="line">            nums.push(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'('</span>) &#123;</span><br><span class="line">            ops.push(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">')'</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (; ops.top() != <span class="string">'('</span>; eval());</span><br><span class="line">            ops.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// determine the priority</span></span><br><span class="line">            <span class="comment">// compare the operator between the last operator on the stk and current operator</span></span><br><span class="line">            <span class="keyword">for</span> (; ops.<span class="built_in">size</span>() &amp;&amp; ops.top() != <span class="string">'('</span> &amp;&amp; pr[ops.top()] &gt;= pr[c]; eval());</span><br><span class="line">            ops.push(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// the last entity could be a digital, since needs to do eval process once again</span></span><br><span class="line">    <span class="comment">// if the operation stack contains several operations and the previous ops has a lower priority than the later's, we have to loop eval that</span></span><br><span class="line">    <span class="keyword">for</span> (; ops.<span class="built_in">size</span>(); eval());</span><br><span class="line">    <span class="comment">//for (; nums.size(); nums.pop()) cout &lt;&lt; nums.top() &lt;&lt; endl;</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; nums.top() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="g_tab0-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LinkedList&lt;Character&gt; ops = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LinkedList&lt;Integer&gt; nums = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">eval</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> b = nums.removeLast();</span><br><span class="line">        <span class="keyword">int</span> a = nums.removeLast();</span><br><span class="line">        <span class="keyword">char</span> op = ops.removeLast();</span><br><span class="line">        <span class="keyword">int</span> res;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="string">'+'</span>) res = a + b;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">'-'</span>) res = a - b;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">'*'</span>) res = a * b;</span><br><span class="line">        <span class="keyword">else</span> res = a / b;</span><br><span class="line">        nums.addLast(res);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">char</span>[] chs)</span> </span>&#123;</span><br><span class="line">        Map&lt;Character, Integer&gt; pr = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        pr.put(<span class="string">'+'</span>, <span class="number">1</span>);</span><br><span class="line">        pr.put(<span class="string">'-'</span>, <span class="number">1</span>);</span><br><span class="line">        pr.put(<span class="string">'*'</span>, <span class="number">2</span>);</span><br><span class="line">        pr.put(<span class="string">'/'</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">int</span> n = chs.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            Character c = chs[i];</span><br><span class="line">            <span class="keyword">if</span> (Character.isDigit(c)) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i;</span><br><span class="line">                <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (; j &lt; n &amp;&amp; Character.isDigit(chs[j]); x = x * <span class="number">10</span> + chs[j++] - <span class="string">'0'</span>);</span><br><span class="line">                i = j - <span class="number">1</span>;</span><br><span class="line">                nums.addLast(x);</span><br><span class="line">                <span class="comment">//System.out.println(x);</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'('</span>) &#123;</span><br><span class="line">                ops.addLast(c);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">')'</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (; !ops.isEmpty() &amp;&amp; ops.peekLast() != <span class="string">'('</span>; eval());</span><br><span class="line">                ops.removeLast();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (; !ops.isEmpty() &amp;&amp; ops.peekLast() != <span class="string">'('</span> &amp;&amp; pr.get(ops.peekLast()) &gt;= pr.get(c); eval());</span><br><span class="line">                ops.addLast(c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (; !ops.isEmpty(); eval());</span><br><span class="line">        System.out.println(nums.peekLast());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedReader  br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        String s = br.readLine();</span><br><span class="line">        <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">        solve(chs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="note primary">            <p><strong>原题链接：</strong> <a href="https://www.acwing.com/problem/content/3305/" target="_blank" rel="noopener">AcWing 3302. 表达式求值</a></p>          </div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;一道表达式求值问题，可以使用非递归的栈解法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="指尖飞舞" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/"/>
    
      <category term="算法" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/"/>
    
      <category term="AcWing" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/AcWing/"/>
    
      <category term="算法基础课" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/AcWing/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/"/>
    
      <category term="第二讲数据结构" scheme="https://accepted.org.cn/categories/%E6%8C%87%E5%B0%96%E9%A3%9E%E8%88%9E/%E7%AE%97%E6%B3%95/AcWing/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/%E7%AC%AC%E4%BA%8C%E8%AE%B2%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="算法" scheme="https://accepted.org.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="栈" scheme="https://accepted.org.cn/tags/%E6%A0%88/"/>
    
      <category term="AcWing" scheme="https://accepted.org.cn/tags/AcWing/"/>
    
      <category term="表达式树" scheme="https://accepted.org.cn/tags/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>经验：把hexo博客环境从Windows迁移到Mac</title>
    <link href="https://accepted.org.cn/2021/08/10/%E7%BB%8F%E9%AA%8C%EF%BC%9A%E6%8A%8Ahexo%E5%8D%9A%E5%AE%A2%E7%8E%AF%E5%A2%83%E4%BB%8EWindows%E8%BF%81%E7%A7%BB%E5%88%B0Mac/"/>
    <id>https://accepted.org.cn/2021/08/10/%E7%BB%8F%E9%AA%8C%EF%BC%9A%E6%8A%8Ahexo%E5%8D%9A%E5%AE%A2%E7%8E%AF%E5%A2%83%E4%BB%8EWindows%E8%BF%81%E7%A7%BB%E5%88%B0Mac/</id>
    <published>2021-08-10T11:10:05.000Z</published>
    <updated>2021-08-10T11:57:39.671Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong><br>记录一下自己把hexo博客环境从Windows迁移到Mac的过程。</p><a id="more"></a><h3 id="Implements"><a href="#Implements" class="headerlink" title="Implements"></a>Implements</h3><ol><li>第一步，准备一碟花生米。</li><li>在Windows环境中，压缩hexo文件夹，拷贝到Mac电脑中。OK，在Windows系统上的操作到此为止。</li><li>接下来咱们在Mac上操作。在Mac上部署hexo需要Homebrew，nvm，node.js(v12.22.4)，hexo.</li><li>安装Homebrew（略）。</li><li>安装nvm（通过Homebrew安装nvm）。<blockquote><p><code>brew install nvm</code><br><code>echo &quot;source $(brew --prefix nvm)/nvm.sh&quot; &gt;&gt; .bash_profile</code><br><code>. ~/.bash_profile</code><br><code>nvm -v</code>查看nvm版本</p></blockquote></li><li>查看当前已安装的node.js版本<blockquote><p><code>nvm list</code><br>如果存在已安装的node.js，建议彻底删除卸载。具体方法略。</p></blockquote></li><li>接下来安装node.js<blockquote><p><code>nvm ls-remote</code> 查看可安装的node.js版本。<br><code>nvm install 12.22.4</code> 不要安装最新版本。<br><code>node -v</code> 查看安装的node版本。<br><code>npm -v</code>  在node安装之后，咱们的npm也默认安装好了。</p></blockquote></li><li>安装hexo，<blockquote><p><code>sudo npm install -g hexo</code></p></blockquote></li><li>到此为止，崭新的hexo环境已配好。咱们可以建一个测试博客。<blockquote><p>cd 到测试文件夹。<br><code>hexo init</code><br><code>hexo g</code><br><code>hexo s</code><br>如果终端显示url及端口号，则说明环境和配置没问题。</p></blockquote></li><li>配置新的SSHkey。因为咱们是用git往GitHub上push代码，那么，配置SSH是有必要的。我建议用新的SSH key。<blockquote><p><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code><br>前往/Users/etoa/，按command+shift+.显示隐藏文件夹，看有无.ssh文件夹。<br>打开.ssh文件夹，以文本打开id_rsa.pub，将咱们的public key拷贝下来，千万别拷贝id_rsa中的key，这里面是私钥，不能放到GitHub上。<br>打开GitHub官网，登录自己的账号。<br>前往Setting页面，选择SSH and GPG keys。<br>点击New SSH key，将public key复制到这里，并命名。</p></blockquote></li><li>打开第2步拷贝的hexo压缩文件，将themes中的_config.yml中的所有Windows绝对路径替换成当前Mac的路径。</li><li>终端定位到hexo根目录，执行：<blockquote><p><code>hexo s</code><br>见证奇迹的时刻，耶～</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;br&gt;记录一下自己把hexo博客环境从Windows迁移到Mac的过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="不亦乐乎" scheme="https://accepted.org.cn/categories/%E4%B8%8D%E4%BA%A6%E4%B9%90%E4%B9%8E/"/>
    
      <category term="博客" scheme="https://accepted.org.cn/categories/%E4%B8%8D%E4%BA%A6%E4%B9%90%E4%B9%8E/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="https://accepted.org.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://accepted.org.cn/tags/Hexo/"/>
    
  </entry>
  
</feed>
